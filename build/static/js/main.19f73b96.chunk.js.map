{"version":3,"sources":["style/Global.ts","connectors/Fortmatic.ts","connectors/NetworkConnector.ts","connectors/bsc/bscConnector.ts","connectors/index.ts","constants/index.ts","hooks/index.ts","state/application/actions.ts","state/application/hooks.ts","components/Column/index.tsx","state/lists/actions.ts","components/Shared/Common.tsx","components/Shared/Type.tsx","utils/listVersionLabel.ts","components/Row/index.tsx","components/Popups/ListUpdatePopup.tsx","utils/index.ts","components/Popups/TransactionPopup.tsx","components/Popups/PopupItem.tsx","components/Popups/index.tsx","components/Loader/index.tsx","components/Web3ReactManager/index.tsx","pages/Swap/redirects.tsx","hooks/LanguageContext.ts","hooks/TranslationsContext.ts","constants/localisation/languageCodes.ts","ThemeContext.tsx","hooks/useTheme.ts","constants/abis/erc20.ts","constants/multicall/index.ts","constants/v1/index.ts","hooks/useContract.ts","constants/eggPriceContracts.ts","hooks/useGetPriceData.ts","components/Menu/config.ts","components/Menu/index.tsx","pages/App.tsx","hooks/useDebounce.ts","hooks/useIsWindowVisible.ts","state/application/updater.ts","utils/contenthashToUri.ts","utils/parseENSAddress.ts","utils/uriToHttp.ts","constants/lists.ts","utils/getTokenList.ts","utils/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","state/lists/updater.ts","hooks/useInterval.ts","utils/retry.ts","state/multicall/actions.ts","state/multicall/updater.tsx","utils/chunkArray.ts","state/transactions/actions.ts","state/transactions/updater.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/actions.ts","state/user/reducer.ts","state/swap/actions.ts","state/transactions/reducer.ts","state/mint/actions.ts","state/swap/reducer.ts","state/burn/actions.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","utils/theme.ts","state/index.ts","utils/getLibrary.ts","Providers.tsx","i18n.ts","index.tsx"],"names":["GlobalStyle","createGlobalStyle","theme","colors","background","CHAIN_ID_NETWORK_ARGUMENT","ChainId","MAINNET","undefined","BSCTESTNET","FortmaticConnector","this","fortmatic","Fortmatic","default","apiKey","chainId","Error","provider","getProvider","pollForOverlayReady","Promise","resolve","interval","setInterval","overlayReady","clearInterval","emit","all","enable","then","accounts","account","FortmaticConnectorCore","RequestError","message","code","data","MiniRpcProvider","url","batchWaitTimeMs","isMetaMask","host","path","nextId","batchTimeoutId","batch","clearBatch","a","console","info","fetch","method","headers","accept","body","JSON","stringify","map","item","request","response","forEach","reject","ok","status","statusText","json","byKey","reduce","memo","current","id","result","error","sendAsync","callback","params","jsonrpc","catch","toString","promise","push","setTimeout","parsed","URL","pathname","NetworkConnector","urls","defaultChainId","invariant","Object","keys","length","supportedChainIds","k","Number","providers","currentChainId","accumulator","AbstractConnector","parseSendReturn","sendReturn","hasOwnProperty","NoBscProviderError","name","constructor","UserRejectedRequestError","BscConnector","kwargs","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","emitUpdate","window","BinanceChain","emitDeactivate","networkId","on","autoRefreshOnNetworkChange","send","warning","isDapper","cachedResults","net_version","netVersion","networkVersion","_chainId","removeListener","NETWORK_URL","process","FORMATIC_KEY","REACT_APP_FORTMATIC_KEY","PORTIS_ID","REACT_APP_PORTIS_ID","NETWORK_CHAIN_ID","parseInt","networkLibrary","network","injected","InjectedConnector","bsc","walletconnect","WalletConnectConnector","rpc","1","bridge","qrcode","pollingInterval","PortisConnector","dAppId","networks","WalletLinkConnector","appName","appLogoUrl","DAI","Token","BUSD","USDT","EOS","DOT","ETH","WETH_ONLY","WETH","NetworkContextName","address","BIPS_BASE","Percent","JSBI","BigInt","exponentiate","useActiveWeb3React","context","useWeb3ReactCore","contextNetwork","active","updateBlockNumber","createAction","toggleWalletModal","toggleSettingsMenu","addPopup","removePopup","useBlockNumber","useSelector","state","application","blockNumber","useRemovePopup","dispatch","useDispatch","useCallback","key","Column","styled","div","AutoColumn","gap","justify","fetchTokenList","pending","fulfilled","rejected","acceptListUpdate","addList","removeList","selectList","button","attrs","backgroundColor","failure","primary","darken","invertedContrast","textDisabled","X","disabled","textSubtle","StyledInternalLink","Link","StyledLink","ExternalLink","target","href","rel","rest","handleClick","event","ctrlKey","metaKey","preventDefault","onClick","rotate","keyframes","img","text","TYPE","main","props","link","black","largeHeader","bold","fontSize","mediumHeader","subHeader","blue","darkGray","italic","style","fontStyle","color","listVersionLabel","version","major","minor","patch","Row","Box","align","padding","border","borderRadius","AutoRow","Body","ListUpdatePopup","popKey","listUrl","oldList","newList","auto","removeThisPopup","handleAcceptUpdate","useMemo","diffTokenLists","tokens","tokensAdded","added","tokensChanged","changed","tokensRemoved","removed","numTokensChanged","flex","fontWeight","token","i","Fragment","title","symbol","flexGrow","marginRight","isAddress","value","getAddress","ETHERSCAN_PREFIXES","56","97","getEtherscanLink","type","prefix","getContract","ABI","library","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","RowNoFlex","TransactionPopup","hash","success","summary","useContext","ThemeContext","paddingRight","size","slice","StyledClose","Popup","mediaQueries","sm","Fader","tertiary","AnimatedFader","animated","PopupItem","removeAfterMs","content","useEffect","timeout","clearTimeout","popupContent","txn","listUpdate","faderStyle","useSpring","from","width","to","config","duration","MobilePopupWrapper","height","MobilePopupInner","FixedPopupColumn","Popups","activePopups","list","popupList","filter","show","useActivePopups","reverse","StyledSVG","svg","stroke","Loader","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","MessageWrapper","Message","h2","primaryDark","Web3ReactManager","children","t","useTranslation","useWeb3React","networkActive","networkError","activateNetwork","activate","triedEager","useState","tried","setTried","isAuthorized","hasSignedIn","localStorage","getItem","isMobile","ethereum","useEagerConnect","suppress","e","useInactiveListener","showLoader","setShowLoader","RedirectToSwap","search","location","outputCurrency","match","defaultLanguageState","selectedLanguage","language","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContext","createContext","defaultTranslationState","translations","setTranslations","TranslationsContext","allLanguages","CACHE_KEY","React","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","parse","setIsDark","handleSetup","startsWith","dataStr","substring","log","addEventListener","removeEventListener","Provider","prevState","setItem","dark","light","useTheme","StyledThemeCopntext","ERC20_INTERFACE","Interface","ERC20_ABI","ERC20_BYTES32_ABI","MULTICALL_NETWORKS","V1_FACTORY_ABI","V1_EXCHANGE_ABI","useContract","withSignerIfPossible","useMulticallContract","MULTICALL_ABI","priceContracts","cakeAddress","busdAddress","lpAddress","useGetPriceData","setData","multicallContract","calls","encodeFunctionData","aggregate","r","decodeFunctionResult","cakeAmount","busdAmount","cake","BigNumber","busd","cakePrice","toNumber","fetchData","label","icon","items","Menu","deactivate","cakePriceUsd","links","priceLink","login","connectorId","logout","currentLang","langs","setLang","AppWrapper","BodyWrapper","Marginer","Soon","App","fallback","exact","strict","component","useDebounce","delay","debouncedValue","setDebouncedValue","handler","VISIBILITY_STATE_SUPPORTED","document","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","setState","blockNumberCallback","s","Math","max","getBlockNumber","debouncedState","UTF_8_DECODER","TextDecoder","contenthashToUri","contenthash","buff","hex","substr","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","trim","ENS_NAME_REGEX","parseENSAddress","ensAddress","ensName","toLowerCase","ensPath","uriToHttp","uri","split","DEFAULT_TOKEN_LIST_URL","DEFAULT_LIST_OF_LISTS","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","defaultTokenJson","parsedENS","contentHashUri","translatedUri","isLast","validationErrors","errors","add","dataPath","REGISTRAR_ABI","constant","inputs","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","resolverContract","resolverAddress","ensRegistrarContract","namehash","resolver","useFetchListCallback","ensResolver","Web3Provider","getNetworkLibrary","requestId","nanoid","tokenList","errorMessage","lists","byUrl","fetchList","leading","savedCallback","useRef","tick","useInterval","loadingRequestId","pendingUpdate","bump","getVersionUpgrade","VersionUpgrade","NONE","PATCH","MINOR","minVersionBump","MAJOR","waitRandom","min","ms","round","random","CancelledError","RetryableError","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","call","test","callData","addMulticallListeners","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults","chunk","minBlockNumber","obj","resultsBlockNumber","returnData","results","multicall","debouncedListeners","callListeners","latestBlockNumber","cancellations","listeningKeys","allListeners","listeners","callKey","keyListeners","blocksPerFetch","previousMin","Infinity","activeListeningKeys","unserializedOutdatedCallKeys","callResults","minDataBlockNumber","fetchingBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","sort","outdatedCallKeys","pcs","parseCallKey","chunkedCalls","maxChunkSize","numChunks","ceil","chunkSize","Array","ix","chunkArray","c","index","fn","rejectCancelled","n","minWait","maxWait","completed","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","curr","lastCallKeyIndex","addTransaction","clearAllTransactions","finalizeTransaction","checkedTransaction","lastBlockNumber","transactions","useAddPopup","tx","receipt","lastCheckedBlockNumber","blocksSinceCheck","minutesPending","Date","getTime","addedTime","shouldCheck","getTransactionReceipt","blockHash","contractAddress","transactionHash","transactionIndex","createReducer","walletModalOpen","settingsMenuOpen","builder","addCase","action","payload","popup","concat","p","updateVersion","updateMatchesDarkMode","updateUserDarkMode","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","currentTimestamp","pairKey","token0Address","token1Address","Field","initialState","userDarkMode","matchesDarkMode","userExpertMode","userSlippageTolerance","userDeadline","pairs","timestamp","audioPlay","lastUpdateVersionTimestamp","serializedToken","serializedPair","token0","token1","tokenAAddress","tokenBAddress","now","approval","txs","confirmedTime","selectCurrency","switchCurrencies","typeInput","replaceSwapState","setRecipient","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","resetMintState","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","lastInitializedDefaultListOfLists","DEFAULT_LIST","selectedListUrl","lastInitializedSet","l","Set","newListOfListsSet","has","LIQUIDITY_PERCENT","options","PERSISTED_KEYS","loadedState","load","states","user","cache","rawCache","getThemeCache","store","configureStore","reducer","swap","mint","burn","middleware","getDefaultMiddleware","thunk","save","preloadedState","getLibrary","Web3ProviderNetwork","createWeb3ReactRoot","Providers","i18next","use","XHR","LanguageDetector","initReactI18next","init","backend","loadPath","react","useSuspense","fallbackLng","preload","keySeparator","interpolation","escapeValue","removeItem","ReactDOM","render","Global","getElementById"],"mappings":"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","file":"static/js/main.19f73b96.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { ChainId } from '@pancakeswap-libs/sdk'\r\nimport { FortmaticConnector as FortmaticConnectorCore } from '@web3-react/fortmatic-connector'\r\n\r\nexport const OVERLAY_READY = 'OVERLAY_READY'\r\n\r\ntype FormaticSupportedChains = Extract<ChainId, ChainId.MAINNET | ChainId.BSCTESTNET>\r\n\r\nconst CHAIN_ID_NETWORK_ARGUMENT: { readonly [chainId in FormaticSupportedChains]: string | undefined } = {\r\n  [ChainId.MAINNET]: undefined,\r\n  [ChainId.BSCTESTNET]: 'Bsc-testnet'\r\n}\r\n\r\nexport class FortmaticConnector extends FortmaticConnectorCore {\r\n  async activate() {\r\n    if (!this.fortmatic) {\r\n      const { default: Fortmatic } = await import('fortmatic')\r\n\r\n      const { apiKey, chainId } = this as any\r\n      if (chainId in CHAIN_ID_NETWORK_ARGUMENT) {\r\n        this.fortmatic = new Fortmatic(apiKey, CHAIN_ID_NETWORK_ARGUMENT[chainId as FormaticSupportedChains])\r\n      } else {\r\n        throw new Error(`Unsupported network ID: ${chainId}`)\r\n      }\r\n    }\r\n\r\n    const provider = this.fortmatic.getProvider()\r\n\r\n    const pollForOverlayReady: Promise<void> = new Promise(resolve => {\r\n      const interval = setInterval(() => {\r\n        if (provider.overlayReady) {\r\n          clearInterval(interval)\r\n          this.emit(OVERLAY_READY)\r\n          resolve()\r\n        }\r\n      }, 200)\r\n    })\r\n\r\n    const [account] = await Promise.all([\r\n      provider.enable().then((accounts: string[]) => accounts[0]),\r\n      pollForOverlayReady\r\n    ])\r\n\r\n    return { provider: this.fortmatic.getProvider(), chainId: (this as any).chainId, account }\r\n  }\r\n}\r\n","import { ConnectorUpdate } from '@web3-react/types'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\nimport invariant from 'tiny-invariant'\r\n\r\ninterface NetworkConnectorArguments {\r\n  urls: { [chainId: number]: string }\r\n  defaultChainId?: number\r\n}\r\n\r\n// taken from ethers.js, compatible interface with web3 provider\r\ntype AsyncSendable = {\r\n  isMetaMask?: boolean\r\n  host?: string\r\n  path?: string\r\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\r\n  send?: (request: any, callback: (error: any, response: any) => void) => void\r\n}\r\n\r\nclass RequestError extends Error {\r\n  constructor(message: string, public code: number, public data?: unknown) {\r\n    super(message)\r\n  }\r\n}\r\n\r\ninterface BatchItem {\r\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown }\r\n  resolve: (result: any) => void\r\n  reject: (error: Error) => void\r\n}\r\n\r\nclass MiniRpcProvider implements AsyncSendable {\r\n  public readonly isMetaMask: false = false\r\n\r\n  public readonly chainId: number\r\n\r\n  public readonly url: string\r\n\r\n  public readonly host: string\r\n\r\n  public readonly path: string\r\n\r\n  public readonly batchWaitTimeMs: number\r\n\r\n  private nextId = 1\r\n\r\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null\r\n\r\n  private batch: BatchItem[] = []\r\n\r\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\r\n    this.chainId = chainId\r\n    this.url = url\r\n    const parsed = new URL(url)\r\n    this.host = parsed.host\r\n    this.path = parsed.pathname\r\n    // how long to wait to batch calls\r\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 50\r\n  }\r\n\r\n  public readonly clearBatch = async () => {\r\n    console.info('Clearing batch', this.batch)\r\n    const { batch } = this\r\n    this.batch = []\r\n    this.batchTimeoutId = null\r\n    let response: Response\r\n    try {\r\n      response = await fetch(this.url, {\r\n        method: 'POST',\r\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\r\n        body: JSON.stringify(batch.map((item) => item.request)),\r\n      })\r\n    } catch (error) {\r\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')))\r\n      return\r\n    }\r\n\r\n    if (!response.ok) {\r\n      batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)))\r\n      return\r\n    }\r\n\r\n    let json\r\n    try {\r\n      json = await response.json()\r\n    } catch (error) {\r\n      batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')))\r\n      return\r\n    }\r\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\r\n      memo[current.request.id] = current\r\n      return memo\r\n    }, {})\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const result of json) {\r\n      const {\r\n        resolve,\r\n        reject,\r\n        request: { method },\r\n      } = byKey[result.id]\r\n      // if (resolve && reject) {\r\n        if ('error' in result) {\r\n          reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\r\n        } else if ('result' in result) {\r\n          resolve(result.result)\r\n        } else {\r\n          reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\r\n        }\r\n      // }\r\n    }\r\n  }\r\n\r\n  public readonly sendAsync = (\r\n    request: { jsonrpc: '2.0'; id: number | string | null; method: string; params?: any },\r\n    callback: (error: any, response: any) => void\r\n  ): void => {\r\n    this.request(request.method, request.params)\r\n      .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\r\n      .catch((error) => callback(error, null))\r\n  }\r\n\r\n  public readonly request = async (\r\n    method: string | { method: string; params: unknown[] },\r\n    params?: any\r\n  ): Promise<unknown> => {\r\n    if (typeof method !== 'string') {\r\n      return this.request(method.method, method.params)\r\n    }\r\n    if (method === 'eth_chainId') {\r\n      return `0x${this.chainId.toString(16)}`\r\n    }\r\n    const promise = new Promise((resolve, reject) => {\r\n      this.batch.push({\r\n        request: {\r\n          jsonrpc: '2.0',\r\n          id: this.nextId++,\r\n          method,\r\n          params,\r\n        },\r\n        resolve,\r\n        reject,\r\n      })\r\n    })\r\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs)\r\n    return promise\r\n  }\r\n}\r\n\r\nexport class NetworkConnector extends AbstractConnector {\r\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\r\n\r\n  private currentChainId: number\r\n\r\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\r\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\r\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\r\n\r\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\r\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\r\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\r\n      return accumulator\r\n    }, {})\r\n  }\r\n\r\n  public get provider(): MiniRpcProvider {\r\n    return this.providers[this.currentChainId]\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\r\n  }\r\n\r\n  public async getProvider(): Promise<MiniRpcProvider> {\r\n    return this.providers[this.currentChainId]\r\n  }\r\n\r\n  public async getChainId(): Promise<number> {\r\n    return this.currentChainId\r\n  }\r\n\r\n  public async getAccount(): Promise<null> {\r\n    return null\r\n  }\r\n\r\n  public deactivate() {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default NetworkConnector\r\n","import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\nimport warning from 'tiny-warning'\r\n\r\nimport { SendReturnResult, SendReturn, Send, SendOld } from './types'\r\n\r\nfunction parseSendReturn(sendReturn: SendReturnResult | SendReturn): any {\r\n  // eslint-disable-next-line no-prototype-builtins\r\n  return sendReturn.hasOwnProperty('result') ? sendReturn.result : sendReturn\r\n}\r\n\r\nexport class NoBscProviderError extends Error {\r\n  public constructor() {\r\n    super()\r\n    this.name = this.constructor.name\r\n    this.message = 'No BSC provider was found on window.BinanceChain.'\r\n  }\r\n}\r\n\r\nexport class UserRejectedRequestError extends Error {\r\n  public constructor() {\r\n    super()\r\n    this.name = this.constructor.name\r\n    this.message = 'The user rejected the request.'\r\n  }\r\n}\r\n\r\nexport class BscConnector extends AbstractConnector {\r\n  constructor(kwargs: AbstractConnectorArguments) {\r\n    super(kwargs)\r\n\r\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\r\n    this.handleChainChanged = this.handleChainChanged.bind(this)\r\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\r\n    this.handleClose = this.handleClose.bind(this)\r\n  }\r\n\r\n  private handleChainChanged(chainId: string | number): void {\r\n    this.emitUpdate({ chainId, provider: window.BinanceChain })\r\n  }\r\n\r\n  private handleAccountsChanged(accounts: string[]): void {\r\n    if (accounts.length === 0) {\r\n      this.emitDeactivate()\r\n    } else {\r\n      this.emitUpdate({ account: accounts[0] })\r\n    }\r\n  }\r\n\r\n  private handleClose(): void {\r\n    this.emitDeactivate()\r\n  }\r\n\r\n  private handleNetworkChanged(networkId: string | number): void {\r\n    this.emitUpdate({ chainId: networkId, provider: window.BinanceChain })\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    if (!window.BinanceChain) {\r\n      throw new NoBscProviderError()\r\n    }\r\n\r\n    if (window.BinanceChain.on) {\r\n      window.BinanceChain.on('chainChanged', this.handleChainChanged)\r\n      window.BinanceChain.on('accountsChanged', this.handleAccountsChanged)\r\n      window.BinanceChain.on('close', this.handleClose)\r\n      window.BinanceChain.on('networkChanged', this.handleNetworkChanged)\r\n    }\r\n\r\n    if ((window.BinanceChain as any).isMetaMask) {\r\n      (window.BinanceChain as any).autoRefreshOnNetworkChange = false\r\n    }\r\n\r\n    // try to activate + get account via eth_requestAccounts\r\n    let account\r\n    try {\r\n      account = await (window.BinanceChain.send as Send)('eth_requestAccounts').then(\r\n        (sendReturn) => parseSendReturn(sendReturn)[0]\r\n      )\r\n    } catch (error) {\r\n      if ((error as any).code === 4001) {\r\n        throw new UserRejectedRequestError()\r\n      }\r\n      warning(false, 'eth_requestAccounts was unsuccessful, falling back to enable')\r\n    }\r\n\r\n    // if unsuccessful, try enable\r\n    if (!account) {\r\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\r\n      account = await window.BinanceChain.enable().then((sendReturn) => sendReturn && parseSendReturn(sendReturn)[0])\r\n    }\r\n\r\n    return { provider: window.BinanceChain, ...(account ? { account } : {}) }\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return window.BinanceChain\r\n  }\r\n\r\n  public async getChainId(): Promise<number | string> {\r\n    if (!window.BinanceChain) {\r\n      throw new NoBscProviderError()\r\n    }\r\n\r\n    let chainId\r\n    try {\r\n      chainId = await (window.BinanceChain.send as Send)('eth_chainId').then(parseSendReturn)\r\n    } catch {\r\n      warning(false, 'eth_chainId was unsuccessful, falling back to net_version')\r\n    }\r\n\r\n    if (!chainId) {\r\n      try {\r\n        chainId = await (window.BinanceChain.send as Send)('net_version').then(parseSendReturn)\r\n      } catch {\r\n        warning(false, 'net_version was unsuccessful, falling back to net version v2')\r\n      }\r\n    }\r\n\r\n    if (!chainId) {\r\n      try {\r\n        chainId = parseSendReturn((window.BinanceChain.send as SendOld)({ method: 'net_version' }))\r\n      } catch {\r\n        warning(false, 'net_version v2 was unsuccessful, falling back to manual matches and static properties')\r\n      }\r\n    }\r\n\r\n    if (!chainId) {\r\n      if ((window.BinanceChain as any).isDapper) {\r\n        chainId = parseSendReturn((window.BinanceChain as any).cachedResults.net_version)\r\n      } else {\r\n        chainId =\r\n          (window.BinanceChain as any).chainId ||\r\n          (window.BinanceChain as any).netVersion ||\r\n          (window.BinanceChain as any).networkVersion ||\r\n          (window.BinanceChain as any)._chainId\r\n      }\r\n    }\r\n\r\n    return chainId\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n    if (!window.BinanceChain) {\r\n      throw new NoBscProviderError()\r\n    }\r\n\r\n    let account\r\n    try {\r\n      account = await (window.BinanceChain.send as Send)('eth_accounts').then(\r\n        (sendReturn) => parseSendReturn(sendReturn)[0]\r\n      )\r\n    } catch {\r\n      warning(false, 'eth_accounts was unsuccessful, falling back to enable')\r\n    }\r\n\r\n    if (!account) {\r\n      try {\r\n        account = await window.BinanceChain.enable().then((sendReturn) => parseSendReturn(sendReturn)[0])\r\n      } catch {\r\n        warning(false, 'enable was unsuccessful, falling back to eth_accounts v2')\r\n      }\r\n    }\r\n\r\n    if (!account) {\r\n      account = parseSendReturn((window.BinanceChain.send as SendOld)({ method: 'eth_accounts' }))[0]\r\n    }\r\n\r\n    return account\r\n  }\r\n\r\n  public deactivate() {\r\n    if (window.BinanceChain && window.BinanceChain.removeListener) {\r\n      window.BinanceChain.removeListener('chainChanged', this.handleChainChanged)\r\n      window.BinanceChain.removeListener('accountsChanged', this.handleAccountsChanged)\r\n      window.BinanceChain.removeListener('close', this.handleClose)\r\n      window.BinanceChain.removeListener('networkChanged', this.handleNetworkChanged)\r\n    }\r\n  }\r\n\r\n  public async isAuthorized(): Promise<boolean> {\r\n    if (!window.BinanceChain) {\r\n      return false\r\n    }\r\n\r\n    try {\r\n      return await (window.BinanceChain.send as Send)('eth_accounts').then((sendReturn) => {\r\n        if (parseSendReturn(sendReturn).length > 0) {\r\n          return true\r\n        }\r\n        return false\r\n      })\r\n    } catch {\r\n      return false\r\n    }\r\n  }\r\n}\r\n","import { Web3Provider } from '@ethersproject/providers'\r\nimport { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\r\nimport { PortisConnector } from '@web3-react/portis-connector'\r\n\r\nimport { FortmaticConnector } from './Fortmatic'\r\nimport { NetworkConnector } from './NetworkConnector'\r\nimport { BscConnector } from './bsc/bscConnector'\r\n\r\nconst NETWORK_URL = process.env.REACT_APP_NETWORK_URL\r\nconst FORMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY\r\nconst PORTIS_ID = process.env.REACT_APP_PORTIS_ID\r\n\r\nexport const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '1')\r\n\r\nif (typeof NETWORK_URL === 'undefined') {\r\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`)\r\n}\r\n\r\nexport const network = new NetworkConnector({\r\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\r\n})\r\n\r\nlet networkLibrary: Web3Provider | undefined\r\nexport function getNetworkLibrary(): Web3Provider {\r\n  // eslint-disable-next-line no-return-assign\r\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any))\r\n}\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [56, 97],\r\n})\r\n\r\nexport const bsc = new BscConnector({ supportedChainIds: [56] })\r\n\r\n// mainnet only\r\nexport const walletconnect = new WalletConnectConnector({\r\n  rpc: { 1: NETWORK_URL },\r\n  bridge: 'https://bridge.walletconnect.org',\r\n  qrcode: true,\r\n  pollingInterval: 15000,\r\n})\r\n\r\n// mainnet only\r\nexport const fortmatic = new FortmaticConnector({\r\n  apiKey: FORMATIC_KEY ?? '',\r\n  chainId: 1,\r\n})\r\n\r\n// mainnet only\r\nexport const portis = new PortisConnector({\r\n  dAppId: PORTIS_ID ?? '',\r\n  networks: [1],\r\n})\r\n\r\n// mainnet only\r\nexport const walletlink = new WalletLinkConnector({\r\n  url: NETWORK_URL,\r\n  appName: 'Uniswap',\r\n  appLogoUrl:\r\n    'https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg',\r\n})\r\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap-libs/sdk'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\n\r\n// import { bsc, fortmatic, injected, portis, walletconnect, walletlink } from '../connectors'\r\nimport { injected, bsc } from '../connectors'\r\n// TODO\r\nexport const ROUTER_ADDRESS = '0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F'\r\n\r\n// a list of tokens by chain\r\ntype ChainTokenList = {\r\n  readonly [chainId in ChainId]: Token[]\r\n}\r\n\r\nexport const DAI = new Token(ChainId.MAINNET, '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3', 18, 'DAI', 'Dai Stablecoin')\r\nexport const BUSD = new Token(ChainId.MAINNET, '0xe9e7cea3dedca5984780bafc599bd69add087d56', 18, 'BUSD', 'Binance USD')\r\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059ff775485246999027b3197955', 18, 'USDT', 'Tether USD')\r\nexport const EOS = new Token(ChainId.MAINNET, '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6', 18, 'EOS', 'EOS Token')\r\nexport const DOT = new Token(ChainId.MAINNET, '0x7083609fce4d1d8dc0c979aab8c869ea2c873402', 18, 'DOT', 'Polkadot Token')\r\nexport const ETH = new Token(ChainId.MAINNET, '0x2170ed0880ac9a755fd29b2688956bd959f933f8', 18, 'ETH', 'Ethereum Token')\r\n\r\nconst WETH_ONLY: ChainTokenList = {\r\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\r\n  [ChainId.BSCTESTNET]: [WETH[ChainId.BSCTESTNET]]\r\n}\r\n\r\n// used to construct intermediary pairs for trading\r\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, USDT, EOS, DOT]\r\n}\r\n\r\n/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n */\r\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {\r\n    [ETH.address]: [DAI, WETH[ChainId.MAINNET]]\r\n  }\r\n}\r\n\r\n// used for display in the default list when adding liquidity\r\nexport const SUGGESTED_BASES: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, USDT]\r\n}\r\n\r\n// used to construct the list of all pairs we consider by default in the frontend\r\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, USDT]\r\n}\r\n\r\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\r\n  [ChainId.MAINNET]: [\r\n    [\r\n      new Token(ChainId.MAINNET, '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82', 18, 'CAKE', 'PancakeSwap Token'),\r\n      new Token(ChainId.MAINNET, '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\r\n    ],\r\n    [BUSD, USDT],\r\n    [DAI, USDT]\r\n  ]\r\n}\r\n\r\nexport interface WalletInfo {\r\n  connector?: AbstractConnector\r\n  name: string\r\n  iconName: string\r\n  description: string\r\n  href: string | null\r\n  color: string\r\n  primary?: true\r\n  mobile?: true\r\n  mobileOnly?: true\r\n}\r\n\r\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\r\n  BSC: {\r\n    connector: bsc,\r\n    name: 'Binance Chain Wallet',\r\n    iconName: 'binance.svg',\r\n    description: 'Easy-to-use browser extension.',\r\n    href: null,\r\n    color: '#E8831D'\r\n  },\r\n  INJECTED: {\r\n    connector: injected,\r\n    name: 'Injected',\r\n    iconName: 'arrow-right.svg',\r\n    description: 'Injected web3 provider.',\r\n    href: null,\r\n    color: '#010101',\r\n    primary: true\r\n  },\r\n  METAMASK: {\r\n    connector: injected,\r\n    name: 'MetaMask',\r\n    iconName: 'metamask.png',\r\n    description: 'Easy-to-use browser extension.',\r\n    href: null,\r\n    color: '#E8831D'\r\n  }\r\n  // WALLET_CONNECT: {\r\n  //   connector: walletconnect,\r\n  //   name: 'WalletConnect',\r\n  //   iconName: 'walletConnectIcon.svg',\r\n  //   description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\r\n  //   href: null,\r\n  //   color: '#4196FC',\r\n  //   mobile: true\r\n  // },\r\n  // WALLET_LINK: {\r\n  //   connector: walletlink,\r\n  //   name: 'Coinbase Wallet',\r\n  //   iconName: 'coinbaseWalletIcon.svg',\r\n  //   description: 'Use Coinbase Wallet app on mobile device',\r\n  //   href: null,\r\n  //   color: '#315CF5'\r\n  // },\r\n  // COINBASE_LINK: {\r\n  //   name: 'Open in Coinbase Wallet',\r\n  //   iconName: 'coinbaseWalletIcon.svg',\r\n  //   description: 'Open in Coinbase Wallet app.',\r\n  //   href: 'https://go.cb-w.com/mtUDhEZPy1',\r\n  //   color: '#315CF5',\r\n  //   mobile: true,\r\n  //   mobileOnly: true\r\n  // },\r\n  // FORTMATIC: {\r\n  //   connector: fortmatic,\r\n  //   name: 'Fortmatic',\r\n  //   iconName: 'fortmaticIcon.png',\r\n  //   description: 'Login using Fortmatic hosted wallet',\r\n  //   href: null,\r\n  //   color: '#6748FF',\r\n  //   mobile: true\r\n  // },\r\n  // Portis: {\r\n  //   connector: portis,\r\n  //   name: 'Portis',\r\n  //   iconName: 'portisIcon.png',\r\n  //   description: 'Login using Portis hosted wallet',\r\n  //   href: null,\r\n  //   color: '#4A6C9B',\r\n  //   mobile: true\r\n  // }\r\n}\r\n\r\nexport const NetworkContextName = 'NETWORK'\r\n\r\n// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 80\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\r\n\r\n// one basis point\r\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\r\nexport const BIPS_BASE = JSBI.BigInt(10000)\r\n// used for warning states\r\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\r\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\r\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\r\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\r\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\r\n// for non expert mode disable swaps above this\r\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\r\n\r\n// used to ensure the user doesn't send so much ETH so they end up with <.01\r\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\r\nexport const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000))\r\n","import { Web3Provider } from '@ethersproject/providers'\r\nimport { ChainId } from '@pancakeswap-libs/sdk'\r\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\r\nimport { useEffect, useState } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { injected } from '../connectors'\r\nimport { NetworkContextName } from '../constants'\r\n\r\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\r\n  const context = useWeb3ReactCore<Web3Provider>()\r\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName)\r\n  return context.active ? context : contextNetwork\r\n}\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active } = useWeb3ReactCore() // specifically using useWeb3ReactCore because of what this hook does\r\n  const [tried, setTried] = useState(false)\r\n\r\n  useEffect(() => {\r\n    injected.isAuthorized().then((isAuthorized) => {\r\n      const hasSignedIn = window.localStorage.getItem('accountStatus')\r\n      if (isAuthorized && hasSignedIn) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true)\r\n        })\r\n      } else if (isMobile && window.ethereum && hasSignedIn) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true)\r\n        })\r\n      } else {\r\n        setTried(true)\r\n      }\r\n    })\r\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (active) {\r\n      setTried(true)\r\n    }\r\n  }, [active])\r\n\r\n  return tried\r\n}\r\n\r\n/**\r\n * Use for network and injected - logs user in\r\n * and out after checking what network theyre on\r\n */\r\nexport function useInactiveListener(suppress = false) {\r\n  const { active, error, activate } = useWeb3ReactCore() // specifically using useWeb3React because of what this hook does\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window\r\n\r\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n      const handleChainChanged = () => {\r\n        // eat errors\r\n        activate(injected, undefined, true).catch((e) => {\r\n          console.error('Failed to activate after chain changed', e)\r\n        })\r\n      }\r\n\r\n      const handleAccountsChanged = (accounts: string[]) => {\r\n        if (accounts.length > 0) {\r\n          // eat errors\r\n          activate(injected, undefined, true).catch((e) => {\r\n            console.error('Failed to activate after accounts changed', e)\r\n          })\r\n        }\r\n      }\r\n\r\n      ethereum.on('chainChanged', handleChainChanged)\r\n      ethereum.on('accountsChanged', handleAccountsChanged)\r\n\r\n      return () => {\r\n        if (ethereum.removeListener) {\r\n          ethereum.removeListener('chainChanged', handleChainChanged)\r\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\r\n        }\r\n      }\r\n    }\r\n    return undefined\r\n  }, [active, error, suppress, activate])\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { TokenList } from '@uniswap/token-lists'\r\n\r\nexport type PopupContent =\r\n  | {\r\n      txn: {\r\n        hash: string\r\n        success: boolean\r\n        summary?: string\r\n      }\r\n    }\r\n  | {\r\n      listUpdate: {\r\n        listUrl: string\r\n        oldList: TokenList\r\n        newList: TokenList\r\n        auto: boolean\r\n      }\r\n    }\r\n\r\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('app/updateBlockNumber')\r\nexport const toggleWalletModal = createAction<void>('app/toggleWalletModal')\r\nexport const toggleSettingsMenu = createAction<void>('app/toggleSettingsMenu')\r\nexport const addPopup = createAction<{ key?: string; removeAfterMs?: number | null; content: PopupContent }>(\r\n  'app/addPopup'\r\n)\r\nexport const removePopup = createAction<{ key: string }>('app/removePopup')\r\n","import { useCallback, useMemo } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { addPopup, PopupContent, removePopup, toggleWalletModal, toggleSettingsMenu } from './actions'\r\nimport { AppState } from '../index'\r\n\r\nexport function useBlockNumber(): number | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\r\n}\r\n\r\nexport function useWalletModalOpen(): boolean {\r\n  return useSelector((state: AppState) => state.application.walletModalOpen)\r\n}\r\n\r\nexport function useWalletModalToggle(): () => void {\r\n  const dispatch = useDispatch()\r\n  return useCallback(() => dispatch(toggleWalletModal()), [dispatch])\r\n}\r\n\r\nexport function useSettingsMenuOpen(): boolean {\r\n  return useSelector((state: AppState) => state.application.settingsMenuOpen)\r\n}\r\n\r\nexport function useToggleSettingsMenu(): () => void {\r\n  const dispatch = useDispatch()\r\n  return useCallback(() => dispatch(toggleSettingsMenu()), [dispatch])\r\n}\r\n\r\n// returns a function that allows adding a popup\r\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\r\n  const dispatch = useDispatch()\r\n\r\n  return useCallback(\r\n    (content: PopupContent, key?: string) => {\r\n      dispatch(addPopup({ content, key }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\n// returns a function that allows removing a popup via its key\r\nexport function useRemovePopup(): (key: string) => void {\r\n  const dispatch = useDispatch()\r\n  return useCallback(\r\n    (key: string) => {\r\n      dispatch(removePopup({ key }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\n// get the list of active popups\r\nexport function useActivePopups(): AppState['application']['popupList'] {\r\n  const list = useSelector((state: AppState) => state.application.popupList)\r\n  return useMemo(() => list.filter(item => item.show), [list])\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\nexport const ColumnCenter = styled(Column)`\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\nexport const AutoColumn = styled.div<{\r\n  gap?: 'sm' | 'md' | 'lg' | string\r\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\r\n}>`\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`\r\n\r\nexport default Column\r\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\r\nimport { TokenList, Version } from '@uniswap/token-lists'\r\n\r\nexport const fetchTokenList: Readonly<{\r\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\r\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\r\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\r\n}> = {\r\n  pending: createAction('lists/fetchTokenList/pending'),\r\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\r\n  rejected: createAction('lists/fetchTokenList/rejected')\r\n}\r\n\r\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\r\nexport const addList = createAction<string>('lists/addList')\r\nexport const removeList = createAction<string>('lists/removeList')\r\nexport const selectList = createAction<string>('lists/selectList')\r\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\r\n","import React, { HTMLProps, useCallback } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { darken } from 'polished'\r\nimport { ArrowLeft, X } from 'react-feather'\r\n\r\nexport const Button = styled.button.attrs<{ warning: boolean }, { backgroundColor: string }>(({ warning, theme }) => ({\r\n  backgroundColor: warning ? theme.colors.failure : theme.colors.primary\r\n}))`\r\n  padding: 1rem 2rem 1rem 2rem;\r\n  border-radius: 3rem;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  font-size: 1rem;\r\n  border: none;\r\n  outline: none;\r\n  background-color: ${({ backgroundColor }) => backgroundColor};\r\n  #FFFFFFwidth: 100%;\r\n\r\n  :hover,\r\n  :focus {\r\n    background-color: ${({ backgroundColor }) => darken(0.05, backgroundColor)};\r\n  }\r\n\r\n  :active {\r\n    background-color: ${({ backgroundColor }) => darken(0.1, backgroundColor)};\r\n  }\r\n\r\n  :disabled {\r\n    background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n    cursor: auto;\r\n  }\r\n`\r\n\r\nexport const CloseIcon = styled(X)<{ onClick: () => void }>`\r\n  cursor: pointer;\r\n`\r\n\r\n// A button that triggers some onClick result, but looks like a link.\r\nexport const LinkStyledButton = styled.button<{ disabled?: boolean }>`\r\n  border: none;\r\n  text-decoration: none;\r\n  background: none;\r\n\r\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\r\n  color: ${({ theme, disabled }) => (disabled ? theme.colors.textSubtle : theme.colors.primary)};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\n// An internal link from the react-router-dom library that is correctly styled\r\nexport const StyledInternalLink = styled(Link)`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst StyledLink = styled.a`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\n/**\r\n * Outbound link that handles firing google analytics events\r\n */\r\nexport function ExternalLink({\r\n  target = '_blank',\r\n  href,\r\n  rel = 'noopener noreferrer',\r\n  ...rest\r\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\r\n      if (!(target === '_blank' || event.ctrlKey || event.metaKey)) {\r\n        event.preventDefault()\r\n      }\r\n    },\r\n    [target]\r\n  )\r\n  return <StyledLink target={target} rel={rel} href={href} onClick={handleClick} {...rest} />\r\n}\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nexport const Spinner = styled.img`\r\n  animation: 2s ${rotate} linear infinite;\r\n  width: 16px;\r\n  height: 16px;\r\n`\r\n\r\nconst BackArrowLink = styled(StyledInternalLink)`\r\n  color: ${({ theme }) => theme.colors.text};\r\n`\r\nexport function BackArrow({ to }: { to: string }) {\r\n  return (\r\n    <BackArrowLink to={to}>\r\n      <ArrowLeft />\r\n    </BackArrowLink>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport const TYPE = {\r\n  main(props: any) {\r\n    return <Text {...props} />\r\n  },\r\n  link(props: any) {\r\n    return <Text {...props} />\r\n  },\r\n  black(props: any) {\r\n    return <Text {...props} />\r\n  },\r\n  body(props: any) {\r\n    return <Text {...props} />\r\n  },\r\n  largeHeader(props: any) {\r\n    return <Text bold fontSize=\"24px\" {...props} />\r\n  },\r\n  mediumHeader(props: any) {\r\n    return <Text bold fontSize=\"20px\" {...props} />\r\n  },\r\n  subHeader(props: any) {\r\n    return <Text fontSize=\"14px\" {...props} />\r\n  },\r\n  blue(props: any) {\r\n    return <Text {...props} />\r\n  },\r\n  darkGray(props: any) {\r\n    return <Text {...props} />\r\n  },\r\n  italic(props: any) {\r\n    return <Text fontSize=\"12px\" style={{ fontStyle: 'italic' }} {...props} />\r\n  },\r\n  error(props: any) {\r\n    return <Text color=\"failure\" {...props} />\r\n  },\r\n}\r\n\r\nexport default TYPE\r\n","import { Version } from '@uniswap/token-lists'\r\n\r\nexport default function listVersionLabel(version: Version): string {\r\n  return `v${version.major}.${version.minor}.${version.patch}`\r\n}\r\n","import styled from 'styled-components'\r\nimport { Box } from 'rebass/styled-components'\r\n\r\nconst Row = styled(Box)<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => (align || 'center')};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`\r\n\r\nexport default Row\r\n","import React, { useCallback, useMemo } from 'react'\r\nimport { diffTokenLists, TokenList } from '@uniswap/token-lists'\r\nimport { Button, Text } from '@pancakeswap-libs/uikit'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AppDispatch } from '../../state'\r\nimport { useRemovePopup } from '../../state/application/hooks'\r\nimport { acceptListUpdate } from '../../state/lists/actions'\r\nimport { TYPE } from '../Shared'\r\nimport listVersionLabel from '../../utils/listVersionLabel'\r\nimport { AutoColumn } from '../Column'\r\nimport { AutoRow } from '../Row'\r\n\r\nconst { body: Body } = TYPE\r\n\r\nexport default function ListUpdatePopup({\r\n  popKey,\r\n  listUrl,\r\n  oldList,\r\n  newList,\r\n  auto,\r\n}: {\r\n  popKey: string\r\n  listUrl: string\r\n  oldList: TokenList\r\n  newList: TokenList\r\n  auto: boolean\r\n}) {\r\n  const removePopup = useRemovePopup()\r\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const handleAcceptUpdate = useCallback(() => {\r\n    if (auto) return\r\n    dispatch(acceptListUpdate(listUrl))\r\n    removeThisPopup()\r\n  }, [auto, dispatch, listUrl, removeThisPopup])\r\n\r\n  const { added: tokensAdded, changed: tokensChanged, removed: tokensRemoved } = useMemo(() => {\r\n    return diffTokenLists(oldList.tokens, newList.tokens)\r\n  }, [newList.tokens, oldList.tokens])\r\n  const numTokensChanged = useMemo(\r\n    () =>\r\n      Object.keys(tokensChanged).reduce((memo, chainId: any) => memo + Object.keys(tokensChanged[chainId]).length, 0),\r\n    [tokensChanged]\r\n  )\r\n\r\n  return (\r\n    <AutoRow>\r\n      <AutoColumn style={{ flex: '1' }} gap=\"8px\">\r\n        {auto ? (\r\n          <Body fontWeight={500}>\r\n            The token list &quot;{oldList.name}&quot; has been updated to{' '}\r\n            <strong>{listVersionLabel(newList.version)}</strong>.\r\n          </Body>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <Text fontSize=\"14px\">\r\n                An update is available for the token list &quot;{oldList.name}&quot; (\r\n                {listVersionLabel(oldList.version)} to {listVersionLabel(newList.version)}).\r\n              </Text>\r\n              <ul>\r\n                {tokensAdded.length > 0 ? (\r\n                  <li>\r\n                    {tokensAdded.map((token, i) => (\r\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\r\n                        <strong title={token.address}>{token.symbol}</strong>\r\n                        {i === tokensAdded.length - 1 ? null : ', '}\r\n                      </React.Fragment>\r\n                    ))}{' '}\r\n                    added\r\n                  </li>\r\n                ) : null}\r\n                {tokensRemoved.length > 0 ? (\r\n                  <li>\r\n                    {tokensRemoved.map((token, i) => (\r\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\r\n                        <strong title={token.address}>{token.symbol}</strong>\r\n                        {i === tokensRemoved.length - 1 ? null : ', '}\r\n                      </React.Fragment>\r\n                    ))}{' '}\r\n                    removed\r\n                  </li>\r\n                ) : null}\r\n                {numTokensChanged > 0 ? <li>{numTokensChanged} tokens updated</li> : null}\r\n              </ul>\r\n            </div>\r\n            <AutoRow>\r\n              <div style={{ flexGrow: 1, marginRight: 12 }}>\r\n                <Button onClick={handleAcceptUpdate}>Accept update</Button>\r\n              </div>\r\n              <div style={{ flexGrow: 1 }}>\r\n                <Button onClick={removeThisPopup}>Dismiss</Button>\r\n              </div>\r\n            </AutoRow>\r\n          </>\r\n        )}\r\n      </AutoColumn>\r\n    </AutoRow>\r\n  )\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { getAddress } from '@ethersproject/address'\r\nimport { AddressZero } from '@ethersproject/constants'\r\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\r\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap-libs/sdk'\r\nimport { ROUTER_ADDRESS } from '../constants'\r\nimport { TokenAddressMap } from '../state/lists/hooks'\r\n\r\n// returns the checksummed address if the address is valid, otherwise returns false\r\nexport function isAddress(value: any): string | false {\r\n  try {\r\n    return getAddress(value)\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\nconst ETHERSCAN_PREFIXES: { [chainId in ChainId]: string } = {\r\n  56: '',\r\n  97: 'Bsc-testnet'\r\n}\r\n\r\nexport function getEtherscanLink(chainId: ChainId, data: string, type: 'transaction' | 'token' | 'address'): string {\r\n  const prefix = `https://${ETHERSCAN_PREFIXES[chainId] || ETHERSCAN_PREFIXES[56]}bscscan.com`\r\n\r\n  switch (type) {\r\n    case 'transaction': {\r\n      return `${prefix}/tx/${data}`\r\n    }\r\n    case 'token': {\r\n      return `${prefix}/token/${data}`\r\n    }\r\n    case 'address':\r\n    default: {\r\n      return `${prefix}/address/${data}`\r\n    }\r\n  }\r\n}\r\n\r\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\r\nexport function shortenAddress(address: string, chars = 4): string {\r\n  const parsed = isAddress(address)\r\n  if (!parsed) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`)\r\n  }\r\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\r\n}\r\n\r\n// add 10%\r\nexport function calculateGasMargin(value: BigNumber): BigNumber {\r\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\r\n}\r\n\r\n// converts a basis points value to a sdk percent\r\nexport function basisPointsToPercent(num: number): Percent {\r\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\r\n}\r\n\r\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\r\n  if (slippage < 0 || slippage > 10000) {\r\n    throw Error(`Unexpected slippage value: ${slippage}`)\r\n  }\r\n  return [\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000))\r\n  ]\r\n}\r\n\r\n// account is not optional\r\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\r\n  return library.getSigner(account).connectUnchecked()\r\n}\r\n\r\n// account is optional\r\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\r\n  return account ? getSigner(library, account) : library\r\n}\r\n\r\n// account is optional\r\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\r\n  if (!isAddress(address) || address === AddressZero) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`)\r\n  }\r\n\r\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\r\n}\r\n\r\n// account is optional\r\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\r\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\r\n}\r\n\r\nexport function escapeRegExp(string: string): string {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\r\n}\r\n\r\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\r\n  if (currency === ETHER) return true\r\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AlertCircle, CheckCircle } from 'react-feather'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { TYPE, ExternalLink } from '../Shared'\r\nimport { getEtherscanLink } from '../../utils'\r\nimport { AutoColumn } from '../Column'\r\nimport { AutoRow } from '../Row'\r\n\r\nconst { body: Body } = TYPE\r\n\r\nconst RowNoFlex = styled(AutoRow)`\r\n  flex-wrap: nowrap;\r\n`\r\n\r\nexport default function TransactionPopup({\r\n  hash,\r\n  success,\r\n  summary,\r\n}: {\r\n  hash: string\r\n  success?: boolean\r\n  summary?: string\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const theme = useContext(ThemeContext)\r\n\r\n  return (\r\n    <RowNoFlex>\r\n      <div style={{ paddingRight: 16 }}>\r\n        {success ? (\r\n          <CheckCircle color={theme.colors.success} size={24} />\r\n        ) : (\r\n          <AlertCircle color={theme.colors.failure} size={24} />\r\n        )}\r\n      </div>\r\n      <AutoColumn gap=\"8px\">\r\n        <Body fontWeight={500}>{summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Body>\r\n        {chainId && <ExternalLink href={getEtherscanLink(chainId, hash, 'transaction')}>View on bscscan</ExternalLink>}\r\n      </AutoColumn>\r\n    </RowNoFlex>\r\n  )\r\n}\r\n","import React, { useCallback, useContext, useEffect } from 'react'\r\nimport { X } from 'react-feather'\r\nimport { useSpring } from 'react-spring/web'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { animated } from 'react-spring'\r\nimport { PopupContent } from '../../state/application/actions'\r\nimport { useRemovePopup } from '../../state/application/hooks'\r\nimport ListUpdatePopup from './ListUpdatePopup'\r\nimport TransactionPopup from './TransactionPopup'\r\n\r\nexport const StyledClose = styled(X)`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\nexport const Popup = styled.div`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 1em;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  position: relative;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  padding-right: 35px;\r\n  overflow: hidden;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 290px;\r\n  }\r\n`\r\nconst Fader = styled.div`\r\n  position: absolute;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 2px;\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n`\r\n\r\nconst AnimatedFader = animated(Fader)\r\n\r\nexport default function PopupItem({\r\n  removeAfterMs,\r\n  content,\r\n  popKey\r\n}: {\r\n  removeAfterMs: number | null\r\n  content: PopupContent\r\n  popKey: string\r\n}) {\r\n  const removePopup = useRemovePopup()\r\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\r\n  useEffect(() => {\r\n    if (removeAfterMs === null) return undefined\r\n\r\n    const timeout = setTimeout(() => {\r\n      removeThisPopup()\r\n    }, removeAfterMs)\r\n\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    }\r\n  }, [removeAfterMs, removeThisPopup])\r\n\r\n  const theme = useContext(ThemeContext)\r\n\r\n  let popupContent\r\n  if ('txn' in content) {\r\n    const {\r\n      txn: { hash, success, summary }\r\n    } = content\r\n    popupContent = <TransactionPopup hash={hash} success={success} summary={summary} />\r\n  } else if ('listUpdate' in content) {\r\n    const {\r\n      listUpdate: { listUrl, oldList, newList, auto }\r\n    } = content\r\n    popupContent = <ListUpdatePopup popKey={popKey} listUrl={listUrl} oldList={oldList} newList={newList} auto={auto} />\r\n  }\r\n\r\n  const faderStyle = useSpring({\r\n    from: { width: '100%' },\r\n    to: { width: '0%' },\r\n    config: { duration: removeAfterMs ?? undefined }\r\n  })\r\n\r\n  return (\r\n    <Popup>\r\n      <StyledClose color={theme.colors.textSubtle} onClick={removeThisPopup} />\r\n      {popupContent}\r\n      {removeAfterMs !== null ? <AnimatedFader style={faderStyle} /> : null}\r\n    </Popup>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useActivePopups } from '../../state/application/hooks'\r\nimport { AutoColumn } from '../Column'\r\nimport PopupItem from './PopupItem'\r\n\r\nconst MobilePopupWrapper = styled.div<{ height: string | number }>`\r\n  position: relative;\r\n  max-width: 100%;\r\n  height: ${({ height }) => height};\r\n  margin: ${({ height }) => (height ? '0 auto;' : 0)};\r\n  margin-bottom: ${({ height }) => (height ? '20px' : 0)}};\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst MobilePopupInner = styled.div`\r\n  height: 99%;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  display: flex;\r\n  flex-direction: row;\r\n  -webkit-overflow-scrolling: touch;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst FixedPopupColumn = styled(AutoColumn)`\r\n  position: fixed;\r\n  top: 64px;\r\n  right: 1rem;\r\n  max-width: 355px !important;\r\n  width: 100%;\r\n  z-index: 2;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nexport default function Popups() {\r\n  // get all popups\r\n  const activePopups = useActivePopups()\r\n\r\n  return (\r\n    <>\r\n      <FixedPopupColumn gap=\"20px\">\r\n        {activePopups.map(item => (\r\n          <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\r\n        ))}\r\n      </FixedPopupColumn>\r\n      <MobilePopupWrapper height={activePopups?.length > 0 ? 'fit-content' : 0}>\r\n        <MobilePopupInner>\r\n          {activePopups // reverse so new items up front\r\n            .slice(0)\r\n            .reverse()\r\n            .map(item => (\r\n              <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\r\n            ))}\r\n        </MobilePopupInner>\r\n      </MobilePopupWrapper>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\r\n  animation: 2s ${rotate} linear infinite;\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n  path {\r\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\r\n  }\r\n`\r\n\r\n/**\r\n * Takes in custom size and stroke for circle color, default to primary color as fill,\r\n * need ...rest for layered styles on top\r\n */\r\nexport default function Loader({ size = '16px', stroke, ...rest }: { size?: string; stroke?: string }) {\r\n  return (\r\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\r\n      <path\r\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\r\n        strokeWidth=\"2.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </StyledSVG>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport { network } from '../../connectors'\r\nimport { useEagerConnect, useInactiveListener } from '../../hooks'\r\nimport { NetworkContextName } from '../../constants'\r\nimport Loader from '../Loader'\r\n\r\nconst MessageWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 20rem;\r\n`\r\n\r\nconst Message = styled.h2`\r\n  color: ${({ theme }) => theme.colors.primaryDark};\r\n`\r\n\r\nexport default function Web3ReactManager({ children }: { children: JSX.Element }) {\r\n  const { t } = useTranslation()\r\n  const { active } = useWeb3React()\r\n  const { active: networkActive, error: networkError, activate: activateNetwork } = useWeb3React(NetworkContextName)\r\n\r\n  // try to eagerly connect to an injected provider, if it exists and has granted access already\r\n  const triedEager = useEagerConnect()\r\n\r\n  // after eagerly trying injected, if the network connect ever isn't active or in an error state, activate itd\r\n  useEffect(() => {\r\n    if (triedEager && !networkActive && !networkError && !active) {\r\n      activateNetwork(network)\r\n    }\r\n  }, [triedEager, networkActive, networkError, activateNetwork, active])\r\n\r\n  // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\r\n  useInactiveListener(!triedEager)\r\n\r\n  // handle delayed loader state\r\n  const [showLoader, setShowLoader] = useState(false)\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setShowLoader(true)\r\n    }, 600)\r\n\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    }\r\n  }, [])\r\n\r\n  // on page load, do nothing until we've tried to connect to the injected connector\r\n  if (!triedEager) {\r\n    return null\r\n  }\r\n\r\n  // if the account context isn't active, and there's an error on the network context, it's an irrecoverable error\r\n  if (!active && networkError) {\r\n    return (\r\n      <MessageWrapper>\r\n        <Message>{t('unknownError')}</Message>\r\n      </MessageWrapper>\r\n    )\r\n  }\r\n\r\n  // if neither context is active, spin\r\n  if (!active && !networkActive) {\r\n    return showLoader ? (\r\n      <MessageWrapper>\r\n        <Loader />\r\n      </MessageWrapper>\r\n    ) : null\r\n  }\r\n\r\n  return children\r\n}\r\n","import React from 'react'\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\r\n\r\n// Redirects to swap but only replace the pathname\r\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\r\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\r\n}\r\n\r\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\r\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\r\n  const {\r\n    location: { search },\r\n    match: {\r\n      params: { outputCurrency },\r\n    },\r\n  } = props\r\n\r\n  const { location } = props\r\n  return (\r\n    <Redirect\r\n      to={{\r\n        ...location,\r\n        pathname: '/swap',\r\n        search:\r\n          search && search.length > 1\r\n            ? `${search}&outputCurrency=${outputCurrency}`\r\n            : `?outputCurrency=${outputCurrency}`,\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React, { createContext } from 'react'\r\n\r\nexport interface LanguageObject {\r\n  code: string\r\n  language: string\r\n}\r\ninterface LanguageState {\r\n  selectedLanguage: LanguageObject\r\n  setSelectedLanguage: React.Dispatch<React.SetStateAction<LanguageObject>>\r\n  translatedLanguage: LanguageObject\r\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LanguageObject>>\r\n}\r\n\r\nconst defaultLanguageState: LanguageState = {\r\n  selectedLanguage: { code: '', language: '' },\r\n  setSelectedLanguage: (): void => undefined,\r\n  translatedLanguage: { code: '', language: '' },\r\n  setTranslatedLanguage: (): void => undefined,\r\n}\r\n\r\nexport const LanguageContext = createContext(defaultLanguageState as LanguageState)\r\n","import React, { createContext } from 'react'\r\n\r\ninterface TranslationState {\r\n  translations: Array<any>\r\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\r\n}\r\n\r\nconst defaultTranslationState: TranslationState = {\r\n  translations: [],\r\n  setTranslations: (): void => undefined,\r\n}\r\n\r\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\r\n\r\nexport default TranslationsContext\r\n","export const EN = { code: 'en', language: 'English' }\r\nexport const AR = { code: 'ar', language: 'العربية' }\r\nexport const CA = { code: 'ca', language: 'Català' }\r\nexport const ZHCN = { code: 'zh-CN', language: '繁體中文' }\r\nexport const ZHTW = { code: 'zh-TW', language: '臺灣華語' }\r\nexport const CS = { code: 'cs', language: 'Čeština' }\r\nexport const DA = { code: 'da', language: 'Dansk' }\r\nexport const DE = { code: 'de', language: 'Deutsch' }\r\nexport const NL = { code: 'nl', language: 'Nederlands' }\r\nexport const FIL = { code: 'fil', language: 'Filipino' }\r\nexport const FI = { code: 'fi', language: 'Suomalainen' }\r\nexport const FR = { code: 'fr', language: 'Français' }\r\nexport const EL = { code: 'el', language: 'Ελληνικά' }\r\nexport const HI = { code: 'hi', language: 'हिंदी' }\r\nexport const HU = { code: 'hu', language: 'Magyar' }\r\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\r\nexport const IT = { code: 'it', language: 'Italiano' }\r\nexport const JA = { code: 'ja', language: '日本語' }\r\nexport const KO = { code: 'ko', language: '한국어' }\r\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\r\nexport const RO = { code: 'ro', language: 'Română' }\r\nexport const RU = { code: 'ru', language: 'Русский' }\r\nexport const SR = { code: 'sr', language: 'Српски' }\r\nexport const ESES = { code: 'es-ES', language: 'Español' }\r\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\r\nexport const TA = { code: 'ta', language: 'தமிழ்' }\r\nexport const TR = { code: 'tr', language: 'Türkçe' }\r\nexport const UK = { code: 'uk', language: 'Українська' }\r\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\r\n\r\nexport const allLanguages = [\r\n  EN,\r\n  // AR,\r\n  // CA,\r\n  // ZHCN,\r\n  // ZHTW,\r\n  // CS,\r\n  // DA,\r\n  // DE,\r\n  // NL,\r\n  // FIL,\r\n  // FI,\r\n  // FR,\r\n  // EL,\r\n  // HI,\r\n  // HU,\r\n  // ID,\r\n  // IT,\r\n  // JA,\r\n  // KO,\r\n  // PTBR,\r\n  // RO,\r\n  // RU,\r\n  // SR,\r\n  // ESES,\r\n  // SVSE,\r\n  // TA,\r\n  // TR,\r\n  // UK,\r\n  // VI\r\n]\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@pancakeswap-libs/uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nexport interface ThemeContextType {\r\n  isDark: boolean;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nconst ThemeContext = React.createContext<ThemeContextType>({ isDark: false, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider: React.FC = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\r\n  })\r\n\r\n  const handleSetup = useCallback(event=>{\r\n    if(event && event.data && typeof event.data === \"string\" && event.data.startsWith(\"[iFrameSizer]message:\")){\r\n      const dataStr = event.data.substring(\"[iFrameSizer]message:\".length);\r\n      const data = JSON.parse(dataStr);\r\n      console.log(\"data.isDark\", data.isDark);\r\n      setIsDark(()=>data.isDark);\r\n    }\r\n  }, []);\r\n  useEffect(()=>{\r\n    window.addEventListener(\"message\", handleSetup);\r\n    return () => {\r\n      window.removeEventListener('message', handleSetup);\r\n    };\r\n  }, [handleSetup]);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState: any) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\r\nimport { ThemeContext } from '../ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeCopntext)\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","import { Interface } from '@ethersproject/abi'\r\nimport ERC20_ABI from './erc20.json'\r\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\r\n\r\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\r\n\r\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\r\n\r\nexport default ERC20_INTERFACE\r\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\r\n","import { ChainId } from '@pancakeswap-libs/sdk'\r\nimport MULTICALL_ABI from './abi.json'\r\n\r\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\r\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb', // TODO\r\n  [ChainId.BSCTESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A'\r\n}\r\n\r\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\r\n","import { Interface } from '@ethersproject/abi'\r\nimport { ChainId } from '@pancakeswap-libs/sdk'\r\nimport V1_EXCHANGE_ABI from './v1_exchange.json'\r\nimport V1_FACTORY_ABI from './v1_factory.json'\r\n\r\nconst V1_FACTORY_ADDRESSES: { [chainId in ChainId]: string } = {\r\n  [ChainId.MAINNET]: '0xC07d4604400139108BbdB3076636365A385879eF', // TODO\r\n  [ChainId.BSCTESTNET]: '0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F'\r\n}\r\n\r\nconst V1_FACTORY_INTERFACE = new Interface(V1_FACTORY_ABI)\r\nconst V1_EXCHANGE_INTERFACE = new Interface(V1_EXCHANGE_ABI)\r\n\r\nexport { V1_FACTORY_ADDRESSES, V1_FACTORY_INTERFACE, V1_FACTORY_ABI, V1_EXCHANGE_INTERFACE, V1_EXCHANGE_ABI }\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { ChainId, WETH } from '@pancakeswap-libs/sdk'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport { useMemo } from 'react'\r\nimport ENS_ABI from '../constants/abis/ens-registrar.json'\r\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json'\r\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20'\r\nimport ERC20_ABI from '../constants/abis/erc20.json'\r\nimport { MIGRATOR_ABI, MIGRATOR_ADDRESS } from '../constants/abis/migrator'\r\nimport UNISOCKS_ABI from '../constants/abis/unisocks.json'\r\nimport WETH_ABI from '../constants/abis/weth.json'\r\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall'\r\nimport { V1_EXCHANGE_ABI, V1_FACTORY_ABI, V1_FACTORY_ADDRESSES } from '../constants/v1'\r\nimport { getContract } from '../utils'\r\nimport { useActiveWeb3React } from './index'\r\n\r\n// returns null on errors\r\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\r\n  const { library, account } = useActiveWeb3React()\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null\r\n    try {\r\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\r\n    } catch (error) {\r\n      console.error('Failed to get contract', error)\r\n      return null\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account])\r\n}\r\n\r\nexport function useV1FactoryContract(): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId && V1_FACTORY_ADDRESSES[chainId], V1_FACTORY_ABI, false)\r\n}\r\n\r\nexport function useV2MigratorContract(): Contract | null {\r\n  return useContract(MIGRATOR_ADDRESS, MIGRATOR_ABI, true)\r\n}\r\n\r\nexport function useV1ExchangeContract(address?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(address, V1_EXCHANGE_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  let address: string | undefined\r\n  if (chainId) {\r\n    switch (chainId) {\r\n      case ChainId.MAINNET:\r\n      case ChainId.BSCTESTNET:\r\n    }\r\n  }\r\n  return useContract(address, ENS_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useMulticallContract(): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\r\n}\r\n\r\nexport function useSocksController(): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(\r\n    chainId === ChainId.MAINNET ? '0x65770b5283117639760beA3F867b69b3697a91dd' : undefined,\r\n    UNISOCKS_ABI,\r\n    false\r\n  )\r\n}\r\n","const priceContracts: {cakeAddress: string, busdAddress: string, lpAddress:string} = {\r\n  cakeAddress: '0x50d809c74e0b8e49e7b4c65bb3109abe3ff4c1c1',\r\n  busdAddress: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n  lpAddress: '0x0ef564d4f8d6c0ffe13348a32e21efd55e508e84'\r\n}\r\n\r\nexport default priceContracts\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useMulticallContract } from './useContract'\r\nimport ERC20_INTERFACE from '../constants/abis/erc20'\r\nimport priceContracts from '../constants/eggPriceContracts'\r\n\r\ntype ApiResponse = {\r\n  prices: {\r\n    [key: string]: string\r\n  }\r\n  update_at: string\r\n}\r\n\r\n/**\r\n * Due to Cors the api was forked and a proxy was created\r\n * @see https://github.com/pancakeswap/gatsby-pancake-api/commit/e811b67a43ccc41edd4a0fa1ee704b2f510aa0ba\r\n */\r\nconst api = 'https://api.pancakeswap.com/api/v1/price'\r\n\r\nconst useGetPriceData = () => {\r\n  const [data, setData] = useState<number>(0)\r\n\r\n  const multicallContract = useMulticallContract();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if(multicallContract){\r\n          const {cakeAddress, busdAddress, lpAddress} = priceContracts;\r\n          const calls = [\r\n            [cakeAddress, ERC20_INTERFACE.encodeFunctionData(\"balanceOf\", [lpAddress])],\r\n            [busdAddress, ERC20_INTERFACE.encodeFunctionData(\"balanceOf\", [lpAddress])],\r\n          ];\r\n\r\n          const [resultsBlockNumber, result] = await multicallContract.aggregate(calls);\r\n          const [cakeAmount, busdAmount] = result.map(r=>ERC20_INTERFACE.decodeFunctionResult(\"balanceOf\", r));\r\n          const cake = new BigNumber(cakeAmount);\r\n          const busd = new BigNumber(busdAmount);\r\n          const cakePrice = busd.div(cake).toNumber();\r\n          setData(cakePrice)\r\n        }\r\n      } catch (error) {\r\n        console.error('Unable to fetch price data:', error)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [multicallContract])\r\n\r\n  return data\r\n}\r\n\r\nexport default useGetPriceData\r\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\r\n\r\nconst config: MenuEntry[] = [\r\n  {\r\n    label: 'Home',\r\n    icon: 'HomeIcon',\r\n    href: 'http://cubdefi.com/',\r\n  },\r\n  {\r\n    label: 'Trade',\r\n    icon: 'TradeIcon',\r\n    items: [\r\n      {\r\n        label: 'Exchange',\r\n        href: 'https://exchange.cubdefi.com/',\r\n      },\r\n      {\r\n        label: 'Liquidity',\r\n        href: 'https://exchange.cubdefi.com/#/pool',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: 'Farms',\r\n    icon: 'FarmIcon',\r\n    href: 'https://cubdefi.com/farms',\r\n  },\r\n  {\r\n    label: 'Dens',\r\n    icon: 'PoolIcon',\r\n    href: 'https://cubdefi.com/dens',\r\n  },\r\n  {\r\n    label: 'LeoBridge',\r\n    icon: 'NftIcon',\r\n    href: \"https://bridge.cubdefi.com\",\r\n  },\r\n  {\r\n    label: 'Info',\r\n    icon: 'InfoIcon',\r\n    items: [\r\n      {\r\n        label: 'GitHub',\r\n        href: 'https://github.com/CubFinance',\r\n      },\r\n      {\r\n        label: 'PancakeSwap',\r\n        href: 'https://pancakeswap.info/token/0x50d809c74e0b8e49e7b4c65bb3109abe3ff4c1c1',\r\n      },\r\n      {\r\n        label: 'CoinMarketCap',\r\n        href: 'https://coinmarketcap.com/currencies/cub-finance/',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: 'Docs',\r\n    icon: 'TicketIcon',\r\n    href: 'https://docs.cubdefi.com/',\r\n  },\r\n  {\r\n    label: 'Roadmap',\r\n    icon: 'MoreIcon',\r\n    href: 'https://docs.cubdefi.com/roadmap',\r\n  },\r\n  {\r\n    label: \"Tokenized Blogging\",\r\n    icon: \"PawIcon\",\r\n    href: \"https://leofinance.io/\",\r\n  },\r\n  {\r\n    label: \"Blog\",\r\n    icon: \"BlogIcon\",\r\n    href: \"https://leofinance.io/@leofinance\",\r\n  },\r\n  {\r\n     label: 'CertiK Audit (Coming Soon)',\r\n     icon: 'AuditIcon',\r\n     href: '#',\r\n  },\r\n]\r\n\r\nexport default config\r\n","import React, { useContext } from 'react'\r\nimport { Menu as UikitMenu, ConnectorId } from '@pancakeswap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { allLanguages } from 'constants/localisation/languageCodes'\r\nimport { LanguageContext } from 'hooks/LanguageContext'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useGetPriceData from 'hooks/useGetPriceData'\r\nimport { injected, bsc, walletconnect } from 'connectors'\r\nimport links from './config'\r\n\r\nconst Menu: React.FC = props => {\r\n  const { account, activate, deactivate } = useWeb3React()\r\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = useGetPriceData()\r\n\r\n  return (\r\n    <UikitMenu\r\n      links={links}\r\n      priceLink=\"https://coinmarketcap.com/currencies/cub-finance/\"\r\n      account={account as string}\r\n      login={(connectorId: ConnectorId) => {\r\n        if (connectorId === 'walletconnect') {\r\n          return activate(walletconnect)\r\n        }\r\n\r\n        if (connectorId === 'bsc') {\r\n          return activate(bsc)\r\n        }\r\n\r\n        return activate(injected)\r\n      }}\r\n      logout={deactivate}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={selectedLanguage?.code || ''}\r\n      langs={allLanguages}\r\n      setLang={setSelectedLanguage}\r\n      cakePriceUsd={cakePriceUsd}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React, { Suspense, useEffect, useState } from 'react'\r\nimport { HashRouter, Route, Switch } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n// import { Credentials, StringTranslations } from '@crowdin/crowdin-api-client'\r\nimport Popups from '../components/Popups'\r\nimport Web3ReactManager from '../components/Web3ReactManager'\r\nimport AddLiquidity from './AddLiquidity'\r\nimport {\r\n  RedirectDuplicateTokenIds,\r\n  RedirectOldAddLiquidityPathStructure,\r\n  RedirectToAddLiquidity\r\n} from './AddLiquidity/redirects'\r\nimport MigrateV1 from './MigrateV1'\r\nimport MigrateV1Exchange from './MigrateV1/MigrateV1Exchange'\r\nimport RemoveV1Exchange from './MigrateV1/RemoveV1Exchange'\r\nimport Pool from './Pool'\r\nimport PoolFinder from './PoolFinder'\r\n// import Farm from './Farm'\r\nimport RemoveLiquidity from './RemoveLiquidity'\r\nimport { RedirectOldRemoveLiquidityPathStructure } from './RemoveLiquidity/redirects'\r\nimport Swap from './Swap'\r\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './Swap/redirects'\r\nimport { EN, allLanguages } from '../constants/localisation/languageCodes'\r\nimport { LanguageContext } from '../hooks/LanguageContext'\r\nimport { TranslationsContext } from '../hooks/TranslationsContext'\r\n\r\nimport Menu from '../components/Menu'\r\n\r\nconst AppWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: flex-start;\r\n  overflow-x: hidden;\r\n`\r\n\r\nconst BodyWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 32px 16px;\r\n  min-height: calc(100vh - 152px);\r\n  align-items: center;\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  z-index: 1;\r\n\r\n  background-image: url('/static/media/bg.bfd323f2.png');\r\n  background-repeat: no-repeat;\r\n  background-position: top;\r\n  background-size: contain;\r\n`\r\n\r\nconst Marginer = styled.div`\r\n  margin-top: 5rem;\r\n`\r\n\r\nconst Soon = () => (\r\n  <div style={{ fontSize: '2rem' }}>Coming soon</div>\r\n)\r\n\r\nexport default function App() {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(undefined)\r\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(undefined)\r\n  const [translations, setTranslations] = useState<Array<any>>([])\r\n  // const apiKey = `${process.env.REACT_APP_CROWDIN_APIKEY}`\r\n  // const projectId = parseInt(`${process.env.REACT_APP_CROWDIN_PROJECTID}`)\r\n  // const fileId = 6\r\n  //\r\n  // const credentials: Credentials = {\r\n  //   token: apiKey\r\n  // }\r\n  //\r\n  // const stringTranslationsApi = new StringTranslations(credentials)\r\n  //\r\n  // const getStoredLang = (storedLangCode: string) => {\r\n  //   return allLanguages.filter(language => {\r\n  //     return language.code === storedLangCode\r\n  //   })[0]\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   const storedLangCode = localStorage.getItem('pancakeSwapLanguage')\r\n  //   if (storedLangCode) {\r\n  //     const storedLang = getStoredLang(storedLangCode)\r\n  //     setSelectedLanguage(storedLang)\r\n  //   } else {\r\n  //     setSelectedLanguage(EN)\r\n  //   }\r\n  // }, [])\r\n  //\r\n  // const fetchTranslationsForSelectedLanguage = async () => {\r\n  //   stringTranslationsApi\r\n  //     .listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\r\n  //     .then(translationApiResponse => {\r\n  //       if (translationApiResponse.data.length < 1) {\r\n  //         setTranslations(['error'])\r\n  //       } else {\r\n  //         setTranslations(translationApiResponse.data)\r\n  //       }\r\n  //     })\r\n  //     .then(() => setTranslatedLanguage(selectedLanguage))\r\n  //     .catch(error => {\r\n  //       setTranslations(['error'])\r\n  //       console.error(error)\r\n  //     })\r\n  // }\r\n  //\r\n  // useEffect(() => {\r\n  //   if (selectedLanguage) {\r\n  //     fetchTranslationsForSelectedLanguage()\r\n  //   }\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [selectedLanguage])\r\n\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <HashRouter>\r\n        <AppWrapper>\r\n          <LanguageContext.Provider\r\n            value={{ selectedLanguage, setSelectedLanguage, translatedLanguage, setTranslatedLanguage }}\r\n          >\r\n            <TranslationsContext.Provider value={{ translations, setTranslations }}>\r\n              <Menu>\r\n                <BodyWrapper>\r\n                  <Popups />\r\n                  <Web3ReactManager>\r\n                    <Switch>\r\n                      <Route exact strict path='/' component={Soon} />\r\n                      {/* <Route exact strict path='/' component={Swap} /> */}\r\n                      <Route exact strict path='/:outputCurrency' component={RedirectToSwap} />\r\n                      {/* <Route exact strict path='/send' component={RedirectPathToSwapOnly} />\r\n                      <Route exact strict path='/find' component={PoolFinder} />\r\n                      <Route exact strict path='/pool' component={Pool} />\r\n                      <Route exact strict path='/create' component={RedirectToAddLiquidity} />\r\n                      <Route exact path='/add' component={AddLiquidity} />\r\n                      <Route exact path='/add/:currencyIdA' component={RedirectOldAddLiquidityPathStructure} />\r\n                      <Route exact path='/add/:currencyIdA/:currencyIdB' component={RedirectDuplicateTokenIds} />\r\n                      <Route exact strict path='/remove/v1/:address' component={RemoveV1Exchange} />\r\n                      <Route exact strict path='/remove/:tokens' component={RedirectOldRemoveLiquidityPathStructure} />\r\n                      <Route exact strict path='/remove/:currencyIdA/:currencyIdB' component={RemoveLiquidity} />\r\n                      <Route exact strict path='/migrate/v1' component={MigrateV1} />\r\n                      <Route exact strict path='/migrate/v1/:address' component={MigrateV1Exchange} />\r\n                      <Route component={RedirectPathToSwapOnly} /> */}\r\n                    </Switch>\r\n                  </Web3ReactManager>\r\n                  <Marginer />\r\n                </BodyWrapper>\r\n              </Menu>\r\n            </TranslationsContext.Provider>\r\n          </LanguageContext.Provider>\r\n        </AppWrapper>\r\n      </HashRouter>\r\n    </Suspense>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\n// modified from https://usehooks.com/useDebounce/\r\nexport default function useDebounce<T>(value: T, delay: number): T {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\r\n\r\n  useEffect(() => {\r\n    // Update debounced value after delay\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value)\r\n    }, delay)\r\n\r\n    // Cancel the timeout if value changes (also on delay change or unmount)\r\n    // This is how we prevent debounced value from updating if value is changed ...\r\n    // .. within the delay period. Timeout gets cleared and restarted.\r\n    return () => {\r\n      clearTimeout(handler)\r\n    }\r\n  }, [value, delay])\r\n\r\n  return debouncedValue\r\n}\r\n","import { useCallback, useEffect, useState } from 'react'\r\n\r\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\r\n\r\nfunction isWindowVisible() {\r\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\r\n}\r\n\r\n/**\r\n * Returns whether the window is currently visible to the user.\r\n */\r\nexport default function useIsWindowVisible(): boolean {\r\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\r\n  const listener = useCallback(() => {\r\n    setFocused(isWindowVisible())\r\n  }, [setFocused])\r\n\r\n  useEffect(() => {\r\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\r\n\r\n    document.addEventListener('visibilitychange', listener)\r\n    return () => {\r\n      document.removeEventListener('visibilitychange', listener)\r\n    }\r\n  }, [listener])\r\n\r\n  return focused\r\n}\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport useDebounce from '../../hooks/useDebounce'\r\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\r\nimport { updateBlockNumber } from './actions'\r\n\r\nexport default function Updater(): null {\r\n  const { library, chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch()\r\n\r\n  const windowVisible = useIsWindowVisible()\r\n\r\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\r\n    chainId,\r\n    blockNumber: null,\r\n  })\r\n\r\n  const blockNumberCallback = useCallback(\r\n    (blockNumber: number) => {\r\n      setState((s) => {\r\n        if (chainId === s.chainId) {\r\n          if (typeof s.blockNumber !== 'number') return { chainId, blockNumber }\r\n          return { chainId, blockNumber: Math.max(blockNumber, s.blockNumber) }\r\n        }\r\n        return s\r\n      })\r\n    },\r\n    [chainId, setState]\r\n  )\r\n\r\n  // attach/detach listeners\r\n  useEffect(() => {\r\n    if (!library || !chainId || !windowVisible) return undefined\r\n\r\n    setState({ chainId, blockNumber: null })\r\n\r\n    library\r\n      .getBlockNumber()\r\n      .then(blockNumberCallback)\r\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\r\n\r\n    library.on('block', blockNumberCallback)\r\n    return () => {\r\n      library.removeListener('block', blockNumberCallback)\r\n    }\r\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\r\n\r\n  const debouncedState = useDebounce(state, 100)\r\n\r\n  useEffect(() => {\r\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\r\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\r\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\r\n\r\n  return null\r\n}\r\n","import CID from 'cids'\r\nimport { getCodec, rmPrefix } from 'multicodec'\r\nimport { decode, toB58String } from 'multihashes'\r\n\r\nexport function hexToUint8Array(hex: string): Uint8Array {\r\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\r\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\r\n  const arr = new Uint8Array(hex.length / 2)\r\n  for (let i = 0; i < arr.length; i++) {\r\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\r\n  }\r\n  return arr\r\n}\r\n\r\nconst UTF_8_DECODER = new TextDecoder()\r\n\r\n/**\r\n * Returns the URI representation of the content hash for supported codecs\r\n * @param contenthash to decode\r\n */\r\nexport default function contenthashToUri(contenthash: string): string {\r\n  const buff = hexToUint8Array(contenthash)\r\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\r\n  switch (codec) {\r\n    case 'ipfs-ns': {\r\n      const data = rmPrefix(buff as Buffer)\r\n      const cid = new CID(data)\r\n      return `ipfs://${toB58String(cid.multihash)}`\r\n    }\r\n    case 'ipns-ns': {\r\n      const data = rmPrefix(buff as Buffer)\r\n      const cid = new CID(data)\r\n      const multihash = decode(cid.multihash)\r\n      if (multihash.name === 'identity') {\r\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\r\n      } \r\n        return `ipns://${toB58String(cid.multihash)}`\r\n      \r\n    }\r\n    default:\r\n      throw new Error(`Unrecognized codec: ${codec}`)\r\n  }\r\n}\r\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+\\.)+)eth(\\/.*)?$/\r\n\r\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\r\n  const match = ensAddress.match(ENS_NAME_REGEX)\r\n  if (!match) return undefined\r\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[3] }\r\n}\r\n\r\nexport default parseENSAddress\r\n","/**\r\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\r\n * @param uri to convert to fetch-able http url\r\n */\r\nexport default function uriToHttp(uri: string): string[] {\r\n  const protocol = uri.split(':')[0].toLowerCase()\r\n  switch (protocol) {\r\n    case 'https':\r\n      return [uri]\r\n    case 'http':\r\n      return [`https${  uri.substr(4)}`, uri]\r\n    case 'ipfs':\r\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\r\n    case 'ipns':\r\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n","// the Uniswap Default token list lives here\r\n// export const DEFAULT_TOKEN_LIST_URL = 'tokens.uniswap.eth'\r\nexport const DEFAULT_TOKEN_LIST_URL = 'pancakeswap'\r\n\r\nexport const DEFAULT_LIST_OF_LISTS: string[] = [DEFAULT_TOKEN_LIST_URL]\r\n","import { TokenList } from '@uniswap/token-lists'\r\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\r\nimport Ajv from 'ajv'\r\nimport contenthashToUri from './contenthashToUri'\r\nimport { parseENSAddress } from './parseENSAddress'\r\nimport uriToHttp from './uriToHttp'\r\n\r\n// bakeryswap defaultTokenJson\r\nimport { DEFAULT_TOKEN_LIST_URL } from '../constants/lists'\r\nimport defaultTokenJson from '../constants/token/pancakeswap.json'\r\n\r\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\r\n\r\n/**\r\n * Contains the logic for resolving a list URL to a validated token list\r\n * @param listUrl list url\r\n * @param resolveENSContentHash resolves an ens name to a contenthash\r\n */\r\nexport default async function getTokenList(\r\n  listUrl: string,\r\n  resolveENSContentHash: (ensName: string) => Promise<string>\r\n): Promise<TokenList> {\r\n  if (listUrl === DEFAULT_TOKEN_LIST_URL) {\r\n    return defaultTokenJson\r\n  }\r\n  const parsedENS = parseENSAddress(listUrl)\r\n\r\n  let urls: string[]\r\n  if (parsedENS) {\r\n    let contentHashUri\r\n    try {\r\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\r\n    } catch (error) {\r\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\r\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\r\n    }\r\n    let translatedUri\r\n    try {\r\n      translatedUri = contenthashToUri(contentHashUri)\r\n    } catch (error) {\r\n      console.error('Failed to translate contenthash to URI', contentHashUri)\r\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\r\n    }\r\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\r\n  } else {\r\n    urls = uriToHttp(listUrl)\r\n  }\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i]\r\n    const isLast = i === urls.length - 1\r\n    let response\r\n    try {\r\n      response = await fetch(url)\r\n    } catch (error) {\r\n      console.error('Failed to fetch list', listUrl, error)\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      // eslint-disable-next-line no-continue\r\n      continue\r\n    }\r\n\r\n    if (!response.ok) {\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      // eslint-disable-next-line no-continue\r\n      continue\r\n    }\r\n\r\n    const json = await response.json()\r\n    if (!tokenListValidator(json)) {\r\n      const validationErrors: string =\r\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\r\n          const add = `${error.dataPath} ${error.message ?? ''}`\r\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\r\n        }, '') ?? 'unknown error'\r\n      throw new Error(`Token list failed validation: ${validationErrors}`)\r\n    }\r\n    return json\r\n  }\r\n  throw new Error('Unrecognized list URL protocol.')\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { Provider } from '@ethersproject/abstract-provider'\r\nimport { namehash } from 'ethers/lib/utils'\r\n\r\nconst REGISTRAR_ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: 'node',\r\n        type: 'bytes32'\r\n      }\r\n    ],\r\n    name: 'resolver',\r\n    outputs: [\r\n      {\r\n        name: 'resolverAddress',\r\n        type: 'address'\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  }\r\n]\r\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\r\n\r\nconst RESOLVER_ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'node',\r\n        type: 'bytes32'\r\n      }\r\n    ],\r\n    name: 'contenthash',\r\n    outputs: [\r\n      {\r\n        internalType: 'bytes',\r\n        name: '',\r\n        type: 'bytes'\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  }\r\n]\r\n\r\n// cache the resolver contracts since most of them are the public resolver\r\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\r\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\r\n}\r\n\r\n/**\r\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\r\n * @param ensName to resolve\r\n * @param provider provider to use to fetch the data\r\n */\r\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\r\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\r\n  const hash = namehash(ensName)\r\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\r\n  return resolverContract(resolverAddress, provider).contenthash(hash)\r\n}\r\n","import { nanoid } from '@reduxjs/toolkit'\r\nimport { ChainId } from '@pancakeswap-libs/sdk'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { getNetworkLibrary, NETWORK_CHAIN_ID } from '../connectors'\r\nimport { AppDispatch } from '../state'\r\nimport { fetchTokenList } from '../state/lists/actions'\r\nimport getTokenList from '../utils/getTokenList'\r\nimport resolveENSContentHash from '../utils/resolveENSContentHash'\r\nimport { useActiveWeb3React } from './index'\r\n\r\nexport function useFetchListCallback(): (listUrl: string) => Promise<TokenList> {\r\n  const { chainId, library } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const ensResolver = useCallback(\r\n    (ensName: string) => {\r\n      if (!library || chainId !== ChainId.MAINNET) {\r\n        if (NETWORK_CHAIN_ID === ChainId.MAINNET) {\r\n          const networkLibrary = getNetworkLibrary()\r\n          if (networkLibrary) {\r\n            return resolveENSContentHash(ensName, networkLibrary)\r\n          }\r\n        }\r\n        throw new Error('Could not construct mainnet ENS resolver')\r\n      }\r\n      return resolveENSContentHash(ensName, library)\r\n    },\r\n    [chainId, library]\r\n  )\r\n\r\n  return useCallback(\r\n    async (listUrl: string) => {\r\n      const requestId = nanoid()\r\n      dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\r\n      return getTokenList(listUrl, ensResolver)\r\n        .then((tokenList) => {\r\n          dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\r\n          return tokenList\r\n        })\r\n        .catch((error) => {\r\n          console.error(`Failed to get list at url ${listUrl}`, error)\r\n          dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\r\n          throw error\r\n        })\r\n    },\r\n    [dispatch, ensResolver]\r\n  )\r\n}\r\n\r\nexport default useFetchListCallback\r\n","import { getVersionUpgrade, minVersionBump, VersionUpgrade } from '@uniswap/token-lists'\r\nimport { useCallback, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback'\r\nimport useInterval from '../../hooks/useInterval'\r\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\r\nimport { addPopup } from '../application/actions'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { acceptListUpdate } from './actions'\r\n\r\nexport default function Updater(): null {\r\n  const { library } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n\r\n  const isWindowVisible = useIsWindowVisible()\r\n\r\n  const fetchList = useFetchListCallback()\r\n\r\n  const fetchAllListsCallback = useCallback(() => {\r\n    if (!isWindowVisible) return\r\n    Object.keys(lists).forEach((url) =>\r\n      fetchList(url).catch((error) => console.error('interval list fetching error', error))\r\n    )\r\n  }, [fetchList, isWindowVisible, lists])\r\n\r\n  // fetch all lists every 10 minutes, but only after we initialize library\r\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\r\n\r\n  // whenever a list is not loaded and not loading, try again to load it\r\n  useEffect(() => {\r\n    Object.keys(lists).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n\r\n      if (!list.current && !list.loadingRequestId && !list.error) {\r\n        fetchList(listUrl).catch((error) => console.error('list added fetching error', error))\r\n      }\r\n    })\r\n  }, [dispatch, fetchList, library, lists])\r\n\r\n  // automatically update lists if versions are minor/patch\r\n  useEffect(() => {\r\n    Object.keys(lists).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n      if (list.current && list.pendingUpdate) {\r\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\r\n        switch (bump) {\r\n          case VersionUpgrade.NONE:\r\n            throw new Error('unexpected no version bump')\r\n          case VersionUpgrade.PATCH:\r\n          case VersionUpgrade.MINOR:\r\n            const min = minVersionBump(list.current.tokens, list.pendingUpdate.tokens)\r\n            // automatically update minor/patch as long as bump matches the min update\r\n            if (bump >= min) {\r\n              dispatch(acceptListUpdate(listUrl))\r\n              dispatch(\r\n                addPopup({\r\n                  key: listUrl,\r\n                  content: {\r\n                    listUpdate: {\r\n                      listUrl,\r\n                      oldList: list.current,\r\n                      newList: list.pendingUpdate,\r\n                      auto: true,\r\n                    },\r\n                  },\r\n                })\r\n              )\r\n            } else {\r\n              console.error(\r\n                `List at url ${listUrl} could not automatically update because the version bump was only PATCH/MINOR while the update had breaking changes and should have been MAJOR`\r\n              )\r\n            }\r\n            break\r\n\r\n          case VersionUpgrade.MAJOR:\r\n            dispatch(\r\n              addPopup({\r\n                key: listUrl,\r\n                content: {\r\n                  listUpdate: {\r\n                    listUrl,\r\n                    auto: false,\r\n                    oldList: list.current,\r\n                    newList: list.pendingUpdate,\r\n                  },\r\n                },\r\n                removeAfterMs: null,\r\n              })\r\n            )\r\n        }\r\n      }\r\n    })\r\n  }, [dispatch, lists])\r\n\r\n  return null\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\r\n  const savedCallback = useRef<() => void>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      const { current } = savedCallback\r\n      if (current) {\r\n        current()\r\n      }\r\n    }\r\n\r\n    if (delay !== null) {\r\n      if (leading) tick()\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return undefined\r\n  }, [delay, leading])\r\n}\r\n","function wait(ms: number): Promise<void> {\r\n  return new Promise((resolve) => setTimeout(resolve, ms))\r\n}\r\n\r\nfunction waitRandom(min: number, max: number): Promise<void> {\r\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\r\n}\r\n\r\n/**\r\n * This error is thrown if the function is cancelled before completing\r\n */\r\nexport class CancelledError extends Error {\r\n  constructor() {\r\n    super('Cancelled')\r\n  }\r\n}\r\n\r\n/**\r\n * Throw this error if the function should retry\r\n */\r\nexport class RetryableError extends Error {}\r\n\r\n/**\r\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\r\n * @param fn function to retry\r\n * @param n how many times to retry\r\n * @param minWait min wait between retries in ms\r\n * @param maxWait max wait between retries in ms\r\n */\r\nexport function retry<T>(\r\n  fn: () => Promise<T>,\r\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number }\r\n): { promise: Promise<T>; cancel: () => void } {\r\n  let completed = false\r\n  let rejectCancelled: (error: Error) => void\r\n  // eslint-disable-next-line no-async-promise-executor\r\n  const promise = new Promise<T>(async (resolve, reject) => {\r\n    rejectCancelled = reject\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n      let result: T\r\n      try {\r\n        result = await fn()\r\n        if (!completed) {\r\n          resolve(result)\r\n          completed = true\r\n        }\r\n        break\r\n      } catch (error) {\r\n        if (completed) {\r\n          break\r\n        }\r\n        if (n <= 0 || !(error instanceof RetryableError)) {\r\n          reject(error)\r\n          completed = true\r\n          break\r\n        }\r\n        n--\r\n      }\r\n      await waitRandom(minWait, maxWait)\r\n    }\r\n  })\r\n  return {\r\n    promise,\r\n    cancel: () => {\r\n      if (completed) return\r\n      completed = true\r\n      rejectCancelled(new CancelledError())\r\n    },\r\n  }\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport interface Call {\r\n  address: string\r\n  callData: string\r\n}\r\n\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\r\nexport function toCallKey(call: Call): string {\r\n  if (!ADDRESS_REGEX.test(call.address)) {\r\n    throw new Error(`Invalid address: ${call.address}`)\r\n  }\r\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\r\n    throw new Error(`Invalid hex: ${call.callData}`)\r\n  }\r\n  return `${call.address}-${call.callData}`\r\n}\r\n\r\nexport function parseCallKey(callKey: string): Call {\r\n  const pcs = callKey.split('-')\r\n  if (pcs.length !== 2) {\r\n    throw new Error(`Invalid call key: ${callKey}`)\r\n  }\r\n  return {\r\n    address: pcs[0],\r\n    callData: pcs[1]\r\n  }\r\n}\r\n\r\nexport interface ListenerOptions {\r\n  // how often this data should be fetched, by default 1\r\n  readonly blocksPerFetch?: number\r\n}\r\n\r\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/addMulticallListeners'\r\n)\r\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/removeMulticallListeners'\r\n)\r\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\r\n  'multicall/fetchingMulticallResults'\r\n)\r\nexport const errorFetchingMulticallResults = createAction<{\r\n  chainId: number\r\n  calls: Call[]\r\n  fetchingBlockNumber: number\r\n}>('multicall/errorFetchingMulticallResults')\r\nexport const updateMulticallResults = createAction<{\r\n  chainId: number\r\n  blockNumber: number\r\n  results: {\r\n    [callKey: string]: string | null\r\n  }\r\n}>('multicall/updateMulticallResults')\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useMulticallContract } from '../../hooks/useContract'\r\nimport useDebounce from '../../hooks/useDebounce'\r\nimport chunkArray from '../../utils/chunkArray'\r\nimport { CancelledError, retry, RetryableError } from '../../utils/retry'\r\nimport { useBlockNumber } from '../application/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  Call,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  parseCallKey,\r\n  updateMulticallResults,\r\n} from './actions'\r\n\r\n// chunk calls so we do not exceed the gas limit\r\nconst CALL_CHUNK_SIZE = 500\r\n\r\n/**\r\n * Fetches a chunk of calls, enforcing a minimum block number constraint\r\n * @param multicallContract multicall contract to fetch against\r\n * @param chunk chunk of calls to make\r\n * @param minBlockNumber minimum block number of the result set\r\n */\r\nasync function fetchChunk(\r\n  multicallContract: Contract,\r\n  chunk: Call[],\r\n  minBlockNumber: number\r\n): Promise<{ results: string[]; blockNumber: number }> {\r\n  console.info('Fetching chunk', multicallContract, chunk, minBlockNumber)\r\n  let resultsBlockNumber\r\n  let returnData\r\n  try {\r\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\r\n      chunk.map((obj) => [obj.address, obj.callData])\r\n    )\r\n  } catch (error) {\r\n    console.info('Failed to fetch chunk inside retry', error)\r\n    throw error\r\n  }\r\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\r\n    console.info(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\r\n    throw new RetryableError('Fetched for old block number')\r\n  }\r\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\r\n}\r\n\r\n/**\r\n * From the current all listeners state, return each call key mapped to the\r\n * minimum number of blocks per fetch. This is how often each key must be fetched.\r\n * @param allListeners the all listeners state\r\n * @param chainId the current chain id\r\n */\r\nexport function activeListeningKeys(\r\n  allListeners: AppState['multicall']['callListeners'],\r\n  chainId?: number\r\n): { [callKey: string]: number } {\r\n  if (!allListeners || !chainId) return {}\r\n  const listeners = allListeners[chainId]\r\n  if (!listeners) return {}\r\n\r\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\r\n    const keyListeners = listeners[callKey]\r\n\r\n    memo[callKey] = Object.keys(keyListeners)\r\n      .filter((key) => {\r\n        const blocksPerFetch = parseInt(key)\r\n        if (blocksPerFetch <= 0) return false\r\n        return keyListeners[blocksPerFetch] > 0\r\n      })\r\n      .reduce((previousMin, current) => {\r\n        return Math.min(previousMin, parseInt(current))\r\n      }, Infinity)\r\n    return memo\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Return the keys that need to be refetched\r\n * @param callResults current call result state\r\n * @param listeningKeys each call key mapped to how old the data can be in blocks\r\n * @param chainId the current chain id\r\n * @param latestBlockNumber the latest block number\r\n */\r\nexport function outdatedListeningKeys(\r\n  callResults: AppState['multicall']['callResults'],\r\n  listeningKeys: { [callKey: string]: number },\r\n  chainId: number | undefined,\r\n  latestBlockNumber: number | undefined\r\n): string[] {\r\n  if (!chainId || !latestBlockNumber) return []\r\n  const results = callResults[chainId]\r\n  // no results at all, load everything\r\n  if (!results) return Object.keys(listeningKeys)\r\n\r\n  return Object.keys(listeningKeys).filter((callKey) => {\r\n    const blocksPerFetch = listeningKeys[callKey]\r\n\r\n    const data = callResults[chainId][callKey]\r\n    // no data, must fetch\r\n    if (!data) return true\r\n\r\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\r\n\r\n    // already fetching it for a recent enough block, don't refetch it\r\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\r\n\r\n    // if data is older than minDataBlockNumber, fetch it\r\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\r\n  })\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\r\n  // wait for listeners to settle before triggering updates\r\n  const debouncedListeners = useDebounce(state.callListeners, 100)\r\n  const latestBlockNumber = useBlockNumber()\r\n  const { chainId } = useActiveWeb3React()\r\n  const multicallContract = useMulticallContract()\r\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\r\n\r\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\r\n    return activeListeningKeys(debouncedListeners, chainId)\r\n  }, [debouncedListeners, chainId])\r\n\r\n  const unserializedOutdatedCallKeys = useMemo(() => {\r\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\r\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\r\n\r\n  const serializedOutdatedCallKeys = useMemo(() => JSON.stringify(unserializedOutdatedCallKeys.sort()), [\r\n    unserializedOutdatedCallKeys,\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if (!latestBlockNumber || !chainId || !multicallContract) return\r\n\r\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\r\n    if (outdatedCallKeys.length === 0) return\r\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\r\n    // .filter(item => item.address.toLowerCase() !== '0xBCfCcbde45cE874adCB698cC183deBcF17952812'.toLowerCase())\r\n\r\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\r\n\r\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\r\n      cancellations.current?.cancellations?.forEach((c) => c())\r\n    }\r\n\r\n    dispatch(\r\n      fetchingMulticallResults({\r\n        calls,\r\n        chainId,\r\n        fetchingBlockNumber: latestBlockNumber,\r\n      })\r\n    )\r\n\r\n    cancellations.current = {\r\n      blockNumber: latestBlockNumber,\r\n      cancellations: chunkedCalls.map((chunk, index) => {\r\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\r\n          n: Infinity,\r\n          minWait: 2500,\r\n          maxWait: 3500,\r\n        })\r\n        promise\r\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\r\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\r\n\r\n            // accumulates the length of all previous indices\r\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\r\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\r\n\r\n            dispatch(\r\n              updateMulticallResults({\r\n                chainId,\r\n                results: outdatedCallKeys\r\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\r\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\r\n                    memo[callKey] = returnData[i] ?? null\r\n                    return memo\r\n                  }, {}),\r\n                blockNumber: fetchBlockNumber,\r\n              })\r\n            )\r\n\r\n            console.info('Success to fetch multicall chunk', chunk, chainId)\r\n          })\r\n          .catch((error: any) => {\r\n            if (error instanceof CancelledError) {\r\n              console.error('Cancelled fetch for blockNumber', latestBlockNumber)\r\n              return\r\n            }\r\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\r\n            dispatch(\r\n              errorFetchingMulticallResults({\r\n                calls: chunk,\r\n                chainId,\r\n                fetchingBlockNumber: latestBlockNumber,\r\n              })\r\n            )\r\n          })\r\n        return cancel\r\n      }),\r\n    }\r\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\r\n\r\n  return null\r\n}\r\n","// chunks array into chunks of maximum size\r\n// evenly distributes items among the chunks\r\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\r\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\r\n  if (items.length <= maxChunkSize) return [items]\r\n\r\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\r\n  const chunkSize = Math.ceil(items.length / numChunks)\r\n\r\n  return [...Array(numChunks).keys()].map(ix => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { ChainId } from '@pancakeswap-libs/sdk'\r\n\r\nexport interface SerializableTransactionReceipt {\r\n  to: string\r\n  from: string\r\n  contractAddress: string\r\n  transactionIndex: number\r\n  blockHash: string\r\n  transactionHash: string\r\n  blockNumber: number\r\n  status?: number\r\n}\r\n\r\nexport const addTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  from: string\r\n  approval?: { tokenAddress: string; spender: string }\r\n  summary?: string\r\n}>('transactions/addTransaction')\r\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\r\nexport const finalizeTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  receipt: SerializableTransactionReceipt\r\n}>('transactions/finalizeTransaction')\r\nexport const checkedTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  blockNumber: number\r\n}>('transactions/checkedTransaction')\r\n","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useAddPopup, useBlockNumber } from '../application/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { checkedTransaction, finalizeTransaction } from './actions'\r\n\r\nexport function shouldCheck(\r\n  lastBlockNumber: number,\r\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number }\r\n): boolean {\r\n  if (tx.receipt) return false\r\n  if (!tx.lastCheckedBlockNumber) return true\r\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\r\n  if (blocksSinceCheck < 1) return false\r\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\r\n  if (minutesPending > 60) {\r\n    // every 10 blocks if pending for longer than an hour\r\n    return blocksSinceCheck > 9\r\n  }\r\n  if (minutesPending > 5) {\r\n    // every 3 blocks if pending more than 5 minutes\r\n    return blocksSinceCheck > 2\r\n  }\r\n  // otherwise every block\r\n  return true\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const { chainId, library } = useActiveWeb3React()\r\n\r\n  const lastBlockNumber = useBlockNumber()\r\n\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const transactions = chainId ? state[chainId] ?? {} : {}\r\n\r\n  // show popup on confirm\r\n  const addPopup = useAddPopup()\r\n\r\n  useEffect(() => {\r\n    if (!chainId || !library || !lastBlockNumber) return\r\n\r\n    Object.keys(transactions)\r\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\r\n      .forEach((hash) => {\r\n        library\r\n          .getTransactionReceipt(hash)\r\n          .then((receipt) => {\r\n            if (receipt) {\r\n              dispatch(\r\n                finalizeTransaction({\r\n                  chainId,\r\n                  hash,\r\n                  receipt: {\r\n                    blockHash: receipt.blockHash,\r\n                    blockNumber: receipt.blockNumber,\r\n                    contractAddress: receipt.contractAddress,\r\n                    from: receipt.from,\r\n                    status: receipt.status,\r\n                    to: receipt.to,\r\n                    transactionHash: receipt.transactionHash,\r\n                    transactionIndex: receipt.transactionIndex,\r\n                  },\r\n                })\r\n              )\r\n\r\n              addPopup(\r\n                {\r\n                  txn: {\r\n                    hash,\r\n                    success: receipt.status === 1,\r\n                    summary: transactions[hash]?.summary,\r\n                  },\r\n                },\r\n                hash\r\n              )\r\n            } else {\r\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(`failed to check transaction hash: ${hash}`, error)\r\n          })\r\n      })\r\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, addPopup])\r\n\r\n  return null\r\n}\r\n","import { createReducer, nanoid } from '@reduxjs/toolkit'\r\nimport {\r\n  addPopup,\r\n  PopupContent,\r\n  removePopup,\r\n  toggleWalletModal,\r\n  toggleSettingsMenu,\r\n  updateBlockNumber\r\n} from './actions'\r\n\r\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>\r\n\r\nexport interface ApplicationState {\r\n  blockNumber: { [chainId: number]: number }\r\n  popupList: PopupList\r\n  walletModalOpen: boolean\r\n  settingsMenuOpen: boolean\r\n}\r\n\r\nconst initialState: ApplicationState = {\r\n  blockNumber: {},\r\n  popupList: [],\r\n  walletModalOpen: false,\r\n  settingsMenuOpen: false\r\n}\r\n\r\nexport default createReducer(initialState, builder =>\r\n  builder\r\n    .addCase(updateBlockNumber, (state, action) => {\r\n      const { chainId, blockNumber } = action.payload\r\n      if (typeof state.blockNumber[chainId] !== 'number') {\r\n        state.blockNumber[chainId] = blockNumber\r\n      } else {\r\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\r\n      }\r\n    })\r\n    .addCase(toggleWalletModal, state => {\r\n      state.walletModalOpen = !state.walletModalOpen\r\n    })\r\n    .addCase(toggleSettingsMenu, state => {\r\n      state.settingsMenuOpen = !state.settingsMenuOpen\r\n    })\r\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000 } }) => {\r\n      state.popupList = (key ? state.popupList.filter(popup => popup.key !== key) : state.popupList).concat([\r\n        {\r\n          key: key || nanoid(),\r\n          show: true,\r\n          content,\r\n          removeAfterMs\r\n        }\r\n      ])\r\n    })\r\n    .addCase(removePopup, (state, { payload: { key } }) => {\r\n      state.popupList.forEach(p => {\r\n        if (p.key === key) {\r\n          p.show = false\r\n        }\r\n      })\r\n    })\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\n// fired once when the app reloads but before the app renders\r\n// allows any updates to be applied to store data loaded from localStorage\r\nexport const updateVersion = createAction<void>('global/updateVersion')\r\n\r\nexport default createAction\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport interface SerializedToken {\r\n  chainId: number\r\n  address: string\r\n  decimals: number\r\n  symbol?: string\r\n  name?: string\r\n}\r\n\r\nexport interface SerializedPair {\r\n  token0: SerializedToken\r\n  token1: SerializedToken\r\n}\r\n\r\nexport const updateMatchesDarkMode = createAction<{ matchesDarkMode: boolean }>('user/updateMatchesDarkMode')\r\nexport const updateUserDarkMode = createAction<{ userDarkMode: boolean }>('user/updateUserDarkMode')\r\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\r\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\r\n  'user/updateUserSlippageTolerance'\r\n)\r\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\r\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\r\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\r\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\r\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\r\n  'user/removeSerializedPair'\r\n)\r\nexport const muteAudio = createAction<void>('user/muteAudio')\r\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../constants'\r\nimport { updateVersion } from '../global/actions'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateMatchesDarkMode,\r\n  updateUserDarkMode,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  updateUserDeadline,\r\n  muteAudio,\r\n  unmuteAudio\r\n} from './actions'\r\n\r\nconst currentTimestamp = () => new Date().getTime()\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number\r\n\r\n  userDarkMode: boolean | null // the user's choice for dark mode or light mode\r\n  matchesDarkMode: boolean // whether the dark mode media query matches\r\n\r\n  userExpertMode: boolean\r\n\r\n  // user defined slippage tolerance in bips, used in all txns\r\n  userSlippageTolerance: number\r\n\r\n  // deadline set by user in minutes, used in all txns\r\n  userDeadline: number\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken\r\n    }\r\n  }\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair\r\n    }\r\n  }\r\n\r\n  timestamp: number\r\n\r\n  audioPlay: boolean\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userDarkMode: null,\r\n  matchesDarkMode: false,\r\n  userExpertMode: false,\r\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n  tokens: {},\r\n  pairs: {},\r\n  timestamp: currentTimestamp(),\r\n  audioPlay: true\r\n}\r\n\r\nexport default createReducer(initialState, builder =>\r\n  builder\r\n    .addCase(updateVersion, state => {\r\n      // slippage isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userSlippageTolerance !== 'number') {\r\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\r\n      }\r\n\r\n      // deadline isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userDeadline !== 'number') {\r\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\r\n      }\r\n\r\n      state.lastUpdateVersionTimestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserDarkMode, (state, action) => {\r\n      state.userDarkMode = action.payload.userDarkMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateMatchesDarkMode, (state, action) => {\r\n      state.matchesDarkMode = action.payload.matchesDarkMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserExpertMode, (state, action) => {\r\n      state.userExpertMode = action.payload.userExpertMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSlippageTolerance, (state, action) => {\r\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserDeadline, (state, action) => {\r\n      state.userDeadline = action.payload.userDeadline\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      state.tokens[chainId] = state.tokens[chainId] || {}\r\n      delete state.tokens[chainId][address]\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const {chainId} = serializedPair.token0\r\n        state.pairs[chainId] = state.pairs[chainId] || {}\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(muteAudio, state => {\r\n      state.audioPlay = false\r\n    })\r\n    .addCase(unmuteAudio, state => {\r\n      state.audioPlay = true\r\n    })\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  INPUT = 'INPUT',\r\n  OUTPUT = 'OUTPUT'\r\n}\r\n\r\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\r\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\r\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\r\nexport const replaceSwapState = createAction<{\r\n  field: Field\r\n  typedValue: string\r\n  inputCurrencyId?: string\r\n  outputCurrencyId?: string\r\n  recipient: string | null\r\n}>('swap/replaceSwapState')\r\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addTransaction,\r\n  checkedTransaction,\r\n  clearAllTransactions,\r\n  finalizeTransaction,\r\n  SerializableTransactionReceipt\r\n} from './actions'\r\n\r\nconst now = () => new Date().getTime()\r\n\r\nexport interface TransactionDetails {\r\n  hash: string\r\n  approval?: { tokenAddress: string; spender: string }\r\n  summary?: string\r\n  receipt?: SerializableTransactionReceipt\r\n  lastCheckedBlockNumber?: number\r\n  addedTime: number\r\n  confirmedTime?: number\r\n  from: string\r\n}\r\n\r\nexport interface TransactionState {\r\n  [chainId: number]: {\r\n    [txHash: string]: TransactionDetails\r\n  }\r\n}\r\n\r\nexport const initialState: TransactionState = {}\r\n\r\nexport default createReducer(initialState, builder =>\r\n  builder\r\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary } }) => {\r\n      if (transactions[chainId]?.[hash]) {\r\n        throw Error('Attempted to add existing transaction.')\r\n      }\r\n      const txs = transactions[chainId] ?? {}\r\n      txs[hash] = { hash, approval, summary, from, addedTime: now() }\r\n      transactions[chainId] = txs\r\n    })\r\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\r\n      if (!transactions[chainId]) return\r\n      transactions[chainId] = {}\r\n    })\r\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\r\n      const tx = transactions[chainId]?.[hash]\r\n      if (!tx) {\r\n        return\r\n      }\r\n      if (!tx.lastCheckedBlockNumber) {\r\n        tx.lastCheckedBlockNumber = blockNumber\r\n      } else {\r\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\r\n      }\r\n    })\r\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\r\n      const tx = transactions[chainId]?.[hash]\r\n      if (!tx) {\r\n        return\r\n      }\r\n      tx.receipt = receipt\r\n      tx.confirmedTime = now()\r\n    })\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  CURRENCY_A = 'CURRENCY_A',\r\n  CURRENCY_B = 'CURRENCY_B'\r\n}\r\n\r\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\r\nexport const resetMintState = createAction<void>('mint/resetMintState')\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\r\n\r\nexport interface SwapState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n  readonly [Field.INPUT]: {\r\n    readonly currencyId: string | undefined\r\n  }\r\n  readonly [Field.OUTPUT]: {\r\n    readonly currencyId: string | undefined\r\n  }\r\n  // the typed recipient address or ENS name, or null if swap should go to sender\r\n  readonly recipient: string | null\r\n}\r\n\r\nconst initialState: SwapState = {\r\n  independentField: Field.INPUT,\r\n  typedValue: '',\r\n  [Field.INPUT]: {\r\n    currencyId: '',\r\n  },\r\n  [Field.OUTPUT]: {\r\n    currencyId: '',\r\n  },\r\n  recipient: null,\r\n}\r\n\r\nexport default createReducer<SwapState>(initialState, (builder) =>\r\n  builder\r\n    .addCase(\r\n      replaceSwapState,\r\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\r\n        return {\r\n          [Field.INPUT]: {\r\n            currencyId: inputCurrencyId,\r\n          },\r\n          [Field.OUTPUT]: {\r\n            currencyId: outputCurrencyId,\r\n          },\r\n          independentField: field,\r\n          typedValue,\r\n          recipient,\r\n        }\r\n      }\r\n    )\r\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\r\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n      if (currencyId === state[otherField].currencyId) {\r\n        // the case where we have to swap the order\r\n        return {\r\n          ...state,\r\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n          [field]: { currencyId },\r\n          [otherField]: { currencyId: state[field].currencyId },\r\n        }\r\n      }\r\n      // the normal case\r\n      return {\r\n        ...state,\r\n        [field]: { currencyId },\r\n      }\r\n    })\r\n    .addCase(switchCurrencies, (state) => {\r\n      return {\r\n        ...state,\r\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\r\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\r\n      }\r\n    })\r\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n      return {\r\n        ...state,\r\n        independentField: field,\r\n        typedValue,\r\n      }\r\n    })\r\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\r\n      state.recipient = recipient\r\n    })\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\r\n  LIQUIDITY = 'LIQUIDITY',\r\n  CURRENCY_A = 'CURRENCY_A',\r\n  CURRENCY_B = 'CURRENCY_B'\r\n}\r\n\r\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, resetMintState, typeInput } from './actions'\r\n\r\nexport interface MintState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n  readonly otherTypedValue: string // for the case when there's no liquidity\r\n}\r\n\r\nconst initialState: MintState = {\r\n  independentField: Field.CURRENCY_A,\r\n  typedValue: '',\r\n  otherTypedValue: ''\r\n}\r\n\r\nexport default createReducer<MintState>(initialState, builder =>\r\n  builder\r\n    .addCase(resetMintState, () => initialState)\r\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\r\n      if (noLiquidity) {\r\n        // they're typing into the field they've last typed in\r\n        if (field === state.independentField) {\r\n          return {\r\n            ...state,\r\n            independentField: field,\r\n            typedValue\r\n          }\r\n        }\r\n        // they're typing into a new field, store the other value\r\n        \r\n          return {\r\n            ...state,\r\n            independentField: field,\r\n            typedValue,\r\n            otherTypedValue: state.typedValue\r\n          }\r\n        \r\n      } \r\n        return {\r\n          ...state,\r\n          independentField: field,\r\n          typedValue,\r\n          otherTypedValue: ''\r\n        }\r\n      \r\n    })\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { TokenList } from '@uniswap/token-lists/dist/types'\r\nimport { DEFAULT_LIST_OF_LISTS, DEFAULT_TOKEN_LIST_URL } from '../../constants/lists'\r\nimport { updateVersion } from '../global/actions'\r\nimport { acceptListUpdate, addList, fetchTokenList, removeList, selectList } from './actions'\r\nimport DEFAULT_LIST from '../../constants/token/pancakeswap.json'\r\n\r\nexport interface ListsState {\r\n  readonly byUrl: {\r\n    readonly [url: string]: {\r\n      readonly current: TokenList | null\r\n      readonly pendingUpdate: TokenList | null\r\n      readonly loadingRequestId: string | null\r\n      readonly error: string | null\r\n    }\r\n  }\r\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\r\n  readonly lastInitializedDefaultListOfLists?: string[]\r\n  readonly selectedListUrl: string | undefined\r\n}\r\n\r\nconst NEW_LIST_STATE: ListsState['byUrl'][string] = {\r\n  error: null,\r\n  current: null,\r\n  loadingRequestId: null,\r\n  pendingUpdate: null,\r\n}\r\n\r\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\r\n\r\nconst initialState: ListsState = {\r\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\r\n  byUrl: {\r\n    ...DEFAULT_LIST_OF_LISTS.reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\r\n      memo[listUrl] = NEW_LIST_STATE\r\n      return memo\r\n    }, {}),\r\n    [DEFAULT_TOKEN_LIST_URL]: {\r\n      error: null,\r\n      current: DEFAULT_LIST,\r\n      loadingRequestId: null,\r\n      pendingUpdate: null,\r\n    },\r\n  },\r\n  selectedListUrl: DEFAULT_TOKEN_LIST_URL,\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\r\n      state.byUrl[url] = {\r\n        current: null,\r\n        pendingUpdate: null,\r\n        ...state.byUrl[url],\r\n        loadingRequestId: requestId,\r\n        error: null,\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\r\n      const current = state.byUrl[url]?.current\r\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\r\n\r\n      // no-op if update does nothing\r\n      if (current) {\r\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\r\n        if (upgradeType === VersionUpgrade.NONE) return\r\n        if (loadingRequestId === null || loadingRequestId === requestId) {\r\n          state.byUrl[url] = {\r\n            ...state.byUrl[url],\r\n            loadingRequestId: null,\r\n            error: null,\r\n            current,\r\n            pendingUpdate: tokenList,\r\n          }\r\n        }\r\n      } else {\r\n        state.byUrl[url] = {\r\n          ...state.byUrl[url],\r\n          loadingRequestId: null,\r\n          error: null,\r\n          current: tokenList,\r\n          pendingUpdate: null,\r\n        }\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\r\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\r\n        // no-op since it's not the latest request\r\n        return\r\n      }\r\n\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        loadingRequestId: null,\r\n        error: errorMessage,\r\n        current: null,\r\n        pendingUpdate: null,\r\n      }\r\n    })\r\n    .addCase(selectList, (state, { payload: url }) => {\r\n      state.selectedListUrl = url\r\n      // automatically adds list\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n    })\r\n    .addCase(addList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n    })\r\n    .addCase(removeList, (state, { payload: url }) => {\r\n      if (state.byUrl[url]) {\r\n        delete state.byUrl[url]\r\n      }\r\n      if (state.selectedListUrl === url) {\r\n        state.selectedListUrl = Object.keys(state.byUrl)[0]\r\n      }\r\n    })\r\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]?.pendingUpdate) {\r\n        throw new Error('accept list update called without pending update')\r\n      }\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        pendingUpdate: null,\r\n        current: state.byUrl[url].pendingUpdate,\r\n      }\r\n    })\r\n    .addCase(updateVersion, (state) => {\r\n      // state loaded from localStorage, but new lists have never been initialized\r\n      if (!state.lastInitializedDefaultListOfLists) {\r\n        state.byUrl = initialState.byUrl\r\n        state.selectedListUrl = undefined\r\n      } else if (state.lastInitializedDefaultListOfLists) {\r\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\r\n          (s, l) => s.add(l),\r\n          new Set()\r\n        )\r\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\r\n\r\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\r\n          if (!lastInitializedSet.has(listUrl)) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE\r\n          }\r\n        })\r\n\r\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\r\n          if (!newListOfListsSet.has(listUrl)) {\r\n            delete state.byUrl[listUrl]\r\n          }\r\n        })\r\n      }\r\n\r\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\r\n    })\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, typeInput } from './actions'\r\n\r\nexport interface BurnState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n}\r\n\r\nconst initialState: BurnState = {\r\n  independentField: Field.LIQUIDITY_PERCENT,\r\n  typedValue: '0'\r\n}\r\n\r\nexport default createReducer<BurnState>(initialState, builder =>\r\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n    return {\r\n      ...state,\r\n      independentField: field,\r\n      typedValue\r\n    }\r\n  })\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addMulticallListeners,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  removeMulticallListeners,\r\n  toCallKey,\r\n  updateMulticallResults\r\n} from './actions'\r\n\r\nexport interface MulticallState {\r\n  callListeners?: {\r\n    // on a per-chain basis\r\n    [chainId: number]: {\r\n      // stores for each call key the listeners' preferences\r\n      [callKey: string]: {\r\n        // stores how many listeners there are per each blocks per fetch preference\r\n        [blocksPerFetch: number]: number\r\n      }\r\n    }\r\n  }\r\n\r\n  callResults: {\r\n    [chainId: number]: {\r\n      [callKey: string]: {\r\n        data?: string | null\r\n        blockNumber?: number\r\n        fetchingBlockNumber?: number\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState: MulticallState = {\r\n  callResults: {}\r\n}\r\n\r\nexport default createReducer(initialState, builder =>\r\n  builder\r\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {})\r\n      listeners[chainId] = listeners[chainId] ?? {}\r\n      calls.forEach(call => {\r\n        const callKey = toCallKey(call)\r\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\r\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\r\n      })\r\n    })\r\n    .addCase(\r\n      removeMulticallListeners,\r\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\r\n        const listeners: MulticallState['callListeners'] = state.callListeners\r\n          ? state.callListeners\r\n          : (state.callListeners = {})\r\n\r\n        if (!listeners[chainId]) return\r\n        calls.forEach(call => {\r\n          const callKey = toCallKey(call)\r\n          if (!listeners[chainId][callKey]) return\r\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\r\n\r\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\r\n            delete listeners[chainId][callKey][blocksPerFetch]\r\n          } else {\r\n            listeners[chainId][callKey][blocksPerFetch]--\r\n          }\r\n        })\r\n      }\r\n    )\r\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach(call => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) {\r\n          state.callResults[chainId][callKey] = {\r\n            fetchingBlockNumber\r\n          }\r\n        } else {\r\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\r\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach(call => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) return // only should be dispatched if we are already fetching\r\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\r\n          delete current.fetchingBlockNumber\r\n          current.data = null\r\n          current.blockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      Object.keys(results).forEach(callKey => {\r\n        const current = state.callResults[chainId][callKey]\r\n        if ((current?.blockNumber ?? 0) > blockNumber) return\r\n        state.callResults[chainId][callKey] = {\r\n          data: results[callKey],\r\n          blockNumber\r\n        }\r\n      })\r\n    })\r\n)\r\n","const CACHE_KEY = 'IS_DARK'\r\n\r\nexport function getThemeCache(): boolean | null {\r\n  let cache = null\r\n  try {\r\n    const rawCache = localStorage.getItem(CACHE_KEY)\r\n    if (rawCache) {\r\n      cache = JSON.parse(rawCache)\r\n    }\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n\r\n  return cache\r\n}\r\n\r\nexport function setThemeCache(isDark: boolean) {\r\n  try {\r\n    localStorage.setItem(CACHE_KEY, JSON.stringify(isDark))\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { save, load } from 'redux-localstorage-simple'\r\n\r\nimport application from './application/reducer'\r\nimport { updateVersion } from './global/actions'\r\nimport user from './user/reducer'\r\nimport transactions from './transactions/reducer'\r\nimport swap from './swap/reducer'\r\nimport mint from './mint/reducer'\r\nimport lists from './lists/reducer'\r\nimport burn from './burn/reducer'\r\nimport multicall from './multicall/reducer'\r\nimport { getThemeCache } from '../utils/theme'\r\n\r\ntype MergedState = {\r\n  user: {\r\n    [key: string]: any\r\n  }\r\n  transactions: {\r\n    [key: string]: any\r\n  }\r\n}\r\nconst PERSISTED_KEYS: string[] = ['user', 'transactions']\r\nconst loadedState = load({ states: PERSISTED_KEYS }) as MergedState\r\nif (loadedState.user) {\r\n  loadedState.user.userDarkMode = getThemeCache()\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    application,\r\n    user,\r\n    transactions,\r\n    swap,\r\n    mint,\r\n    burn,\r\n    multicall,\r\n    lists,\r\n  },\r\n  middleware: [...getDefaultMiddleware({ thunk: false }), save({ states: PERSISTED_KEYS })],\r\n  preloadedState: loadedState,\r\n})\r\n\r\nstore.dispatch(updateVersion())\r\n\r\nexport default store\r\n\r\nexport type AppState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import { Web3Provider } from '@ethersproject/providers'\r\n\r\nexport default function getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider)\r\n  library.pollingInterval = 15000\r\n  return library\r\n}\r\n","import React from 'react'\r\nimport { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core'\r\nimport { Provider } from 'react-redux'\r\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\r\nimport { NetworkContextName } from './constants'\r\nimport store from './state'\r\nimport getLibrary from './utils/getLibrary'\r\nimport { ThemeContextProvider } from './ThemeContext'\r\n\r\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName)\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Web3ProviderNetwork getLibrary={getLibrary}>\r\n        <Provider store={store}>\r\n          <ThemeContextProvider>\r\n            <ModalProvider>{children}</ModalProvider>\r\n          </ThemeContextProvider>\r\n        </Provider>\r\n      </Web3ProviderNetwork>\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import i18next from 'i18next'\r\nimport { initReactI18next } from 'react-i18next'\r\nimport XHR from 'i18next-xhr-backend'\r\nimport LanguageDetector from 'i18next-browser-languagedetector'\r\n\r\ni18next\r\n  .use(XHR)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    backend: {\r\n      loadPath: `./locales/{{lng}}.json`\r\n    },\r\n    react: {\r\n      useSuspense: true\r\n    },\r\n    fallbackLng: 'en',\r\n    preload: ['en'],\r\n    keySeparator: false,\r\n    interpolation: { escapeValue: false }\r\n  })\r\n\r\nexport default i18next\r\n","import React, { StrictMode } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\r\nimport GlobalStyle from './style/Global'\r\nimport App from './pages/App'\r\nimport ApplicationUpdater from './state/application/updater'\r\nimport ListsUpdater from './state/lists/updater'\r\nimport MulticallUpdater from './state/multicall/updater'\r\nimport TransactionUpdater from './state/transactions/updater'\r\nimport Providers from './Providers'\r\nimport 'inter-ui'\r\nimport './i18n'\r\n\r\nif ('ethereum' in window) {\r\n  (window.ethereum as any).autoRefreshOnNetworkChange = false\r\n}\r\n\r\nwindow.addEventListener('error', () => {\r\n   localStorage?.removeItem('redux_localstorage_simple_lists')\r\n})\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <Providers>\r\n      <>\r\n        <ListsUpdater />\r\n        <ApplicationUpdater />\r\n        <TransactionUpdater />\r\n        <MulticallUpdater />\r\n      </>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <App />\r\n    </Providers>\r\n  </StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}